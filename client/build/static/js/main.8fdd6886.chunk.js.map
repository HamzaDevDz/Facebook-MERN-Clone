{"version":3,"sources":["ServerInstance.js","features/login/loginSlice.js","features/login/Login.js","features/login/SignUp/SignUp.js","features/home/header/headerSlice.js","features/home/friendsBox/friendsBoxSlice.js","features/home/header/Header.js","features/home/feed/posts/postsSlice.js","features/home/feed/posts/upload/Upload.js","features/home/feed/posts/comment/Comment.js","features/home/feed/posts/uploadComment/UploadComment.js","features/home/feed/posts/post/Post.js","features/home/feed/posts/Posts.js","features/home/feed/Feed.js","features/home/sidebar/Sidebar.js","features/home/messages/messagesSlice.js","features/home/friendsBox/FriendsBox.js","features/home/messages/discussion/Discussion.js","features/home/messages/Messages.js","features/home/Home.js","App.js","app/store.js","serviceWorker.js","index.js","features/calcul/calcul.js"],"names":["getImage","filename","ServerInstanceAddress","pusher","Pusher","cluster","uploadUser","createAsyncThunk","user","thunkAPI","a","axios","post","then","res","data","response","rejectWithValue","error","message","retrieveUser","synchUser","idUser","loginSlice","createSlice","name","initialState","err","statusLogin","reducers","resetError","state","retrieveLocalUser","localUser","localStorage","getItem","console","log","JSON","parse","logOut","removeItem","extraReducers","fulfilled","action","payload","setItem","stringify","rejected","messageError","split","codeError","length","parseInt","pending","actions","selectUser","login","selectErr","selectStatusLogin","Login","useState","username","setUsername","password","setPassword","setError","history","useHistory","dispatch","useDispatch","useSelector","useEffect","document","querySelector","style","display","_id","push","setTimeout","className","src","alt","FormControl","TextField","label","variant","value","onChange","e","target","disabled","type","Alert","severity","AlertTitle","Button","color","onClick","preventDefault","userLogin","toLocaleLowerCase","CircularProgress","SignUp","setName","firstName","setFirstName","email","setEmail","phone","setPhone","undefined","image","setImage","passwordConfirm","setPasswordConfirm","htmlFor","component","id","files","formData","FormData","append","newUser","toUpperCase","imgUserName","toLowerCase","alert","searchFriends","search","inviteFriend","invitation","disinviteFriend","disinvitation","getUser","get","getRequesters","myIdUser","refuseFriend","idUserRequest","headerSlice","friends","statusSearch","notification","requesters","selectFriends","header","selectStatusSearch","selectRequesters","addFriend","removeFriend","idUserFriend","getFriends","friendsBoxSlice","friendsBox","Header","openPlus","setOpenPlus","setSearch","focus","setFocus","openNotification","setOpenNotification","home","messages","filter","onclick","inputSeach","activeElement","contains","searchBox","btnPlus","btnNotification","channel","subscribe","bind","fontSize","placeholder","map","f","Avatar","idFriends","includes","String","size","idFriend","idRequests","idRequest","IconButton","requester","getPosts","uploadPost","newPost","addCommentToPostById","newComment","likePostById","like","dislikePostById","likeCommentById","dislikeCommentById","postsSlice","posts","statusLikePost","statusLikeComment","setLikePostById","reducer","idPost","index","findIndex","p","likes","splice","indexOf","prepare","setLikeCommentById","indexPost","indexComment","comments","c","idComment","selectPosts","Upload","caption","setCaption","setVideo","media","setMedia","setMood","img","setImg","width","timestamp","Date","now","mood","Comment","text","timer","setTimer","flag","setFlag","getElementById","clearTimeout","calculateDifferenceTimestamps","UploadComment","comment","setComment","Input","Post","imgUser","imgPost","displayComments","setDisplayComments","path","extname","controls","Posts","videoPost","Feed","Sidebar","getDiscussion","idUsers","idUser1","idUser2","addMessage","newMessage","synchMessages","messagesSlice","discussions","statusUpDateDiscussions","cleanDiscussion","resetStatusUpDateDiscussions","d","selectDiscussions","selectStatusUpDateDiscussions","FriendsBox","friend","Discussion","setMessage","reduced","setReduced","msg","autoFocus","idMessages","Messages","statusSynchServer","setStatusSynchServer","forEach","i","mainElements","querySelectorAll","mainElem","scrollTop","scrollHeight","Home","App","exact","render","Fragment","from","to","status","store","configureStore","postsReducer","loginReducer","headerReducer","friendsBoxReducer","messagesReducer","Boolean","window","location","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","module","exports","t1","t2","diff","Math","round","generateUniqueId","s4","floor","random","toString","substring"],"mappings":"olBAMaA,EAAW,SAACC,GACrB,MAAOC,kDAAuDD,GAGrDE,EAAS,I,OAAIC,GAAO,uBAAwB,CACrDC,QAAS,O,iBCDAC,EAAaC,YACtB,cADsC,uCAEtC,WAAOC,EAAMC,GAAb,eAAAC,EAAA,+EAE+BC,IAAMC,KAAKV,oCAAsCM,GAAMK,MAAK,SAAAC,GAC/E,OAAOA,EAAIC,QAHvB,cAEcC,EAFd,yBAKeA,GALf,yDAOeP,EAASQ,gBAAgB,CAAEC,MAAO,KAAMC,WAPvD,yDAFsC,yDAa7BC,EAAeb,YACxB,iBADwC,uCAExC,WAAOC,EAAMC,GAAb,eAAAC,EAAA,+EAE+BC,IAAMC,KAAKV,sCAAwCM,GAAMK,MAAK,SAACC,GAClF,OAAOA,EAAIC,QAHvB,cAEcC,EAFd,yBAKeA,GALf,yDAQeP,EAASQ,gBAAgB,CAAEC,MAAO,KAAMC,WARvD,yDAFwC,yDAc/BE,EAAYd,YACrB,uBADqC,uCAErC,WAAOe,EAAQb,GAAf,eAAAC,EAAA,+EAE+BC,IAAMC,KAAKV,6CAA+CoB,GAAQT,MAAK,SAAAC,GAC1F,OAAOA,EAAIC,QAHvB,cAEcC,EAFd,yBAKeA,GALf,yDAOeP,EAASQ,gBAAgB,CAAEC,MAAO,KAAMC,WAPvD,yDAFqC,yDAgB5BI,EAAaC,YAAY,CAClCC,KAAM,QACNC,aAnDiB,CACjBlB,KAAM,KACNmB,IAAK,KACLC,YAAa,MAiDbC,SAAU,CACNC,WAAY,SAACC,GACTA,EAAMJ,IAAM,MAEhBK,kBAAmB,SAACD,GAChB,IAAME,EAAYC,aAAaC,QAAQ,QACvCC,QAAQC,IAAIJ,GACTA,GACCG,QAAQC,IAAI,cACZN,EAAMvB,KAAO8B,KAAKC,MAAMN,IAGxBG,QAAQC,IAAI,mBAGpBG,OAAQ,SAACT,GACLA,EAAMvB,KAAO,KACb0B,aAAaO,WAAW,UAGhCC,eAAa,mBAERpC,EAAWqC,WAAY,SAACZ,EAAOa,GAC5Bb,EAAMvB,KAAOoC,EAAOC,WAHf,cAMRzB,EAAauB,WAAY,SAACZ,EAAOa,GAC9Bb,EAAMH,YAAc,KACpBM,aAAaY,QAAQ,OAAQR,KAAKS,UAAUH,EAAOC,UACnDd,EAAMvB,KAAOoC,EAAOC,WATf,cAWRzB,EAAa4B,UAAW,SAACjB,EAAOa,GAC7Bb,EAAMH,YAAc,KACpB,IAAMqB,EAAeL,EAAOC,QAAQ3B,MAAMgC,MAAM,KAC1CC,EAAYF,EAAaA,EAAaG,OAAS,GACrDrB,EAAMJ,IAAM0B,SAASF,MAfhB,cAiBR/B,EAAakC,SAAU,SAACvB,GACrBA,EAAMH,YAAc,UAlBf,cAqBRP,EAAUsB,WAAY,SAACZ,EAAOa,GAC3BV,aAAaY,QAAQ,OAAQR,KAAKS,UAAUH,EAAOC,UACnDd,EAAMvB,KAAOoC,EAAOC,WAvBf,KA6BV,EAAgDtB,EAAWgC,QAApDzB,EAAP,EAAOA,WAAYE,EAAnB,EAAmBA,kBAAmBQ,EAAtC,EAAsCA,OAEhCgB,EAAa,SAACzB,GAAD,OAAWA,EAAM0B,MAAMjD,MACpCkD,EAAY,SAAC3B,GAAD,OAAWA,EAAM0B,MAAM9B,KACnCgC,EAAoB,SAAC5B,GAAD,OAAWA,EAAM0B,MAAM7B,aAEzCL,IAAf,Q,2CC3FaqC,EAAQ,WAEjB,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA0BJ,mBAAS,IAAnC,mBAAO3C,EAAP,KAAcgD,EAAd,KAEMC,EAAUC,cAEVC,EAAWC,cAEX9D,EAAO+D,YAAYf,GACnB7B,EAAM4C,YAAYb,GAClB9B,EAAc2C,YAAYZ,GAEhCa,qBAAU,WACNC,SAASC,cAAc,uBAAuBC,MAAMC,QAAU,SAChE,IAEFJ,qBAAU,WACM,OAAThE,GACC6D,EAAShD,EAAU,CAACC,OAAQd,EAAKqE,OACjCV,EAAQW,KAAK,UAGbT,EAASrC,OAEd,CAACxB,IAEJgE,qBAAU,WACN,GAAW,OAAR7C,EAAa,CAEZ,OADA8C,SAASC,cAAc,uBAAuBC,MAAMC,QAAU,OACtDjD,GACJ,KAAK,IACDuC,EAAS,yBACT,MACJ,KAAK,IACDA,EAAS,sBACT,MACJ,QACIA,EAAS,sBAEjBa,YAAW,WACPN,SAASC,cAAc,uBAAuBC,MAAMC,QAAU,OAC9DV,EAAS,IACTG,EAASvC,OACV,QAER,CAACH,IAEJ6C,qBAAU,WACa,OAAhB5C,EAEC6C,SAASC,cAAc,sBAAsBC,MAAMC,QAAU,QAK7DH,SAASC,cAAc,sBAAsBC,MAAMC,QAAU,OAE7Db,EAAY,IACZE,EAAY,OAEjB,CAACrC,IAeJ,OACI,sBAAKoD,UAAW,QAAhB,UACI,qBAAKC,IAAK,aAAcC,IAAK,GAAIF,UAAW,eAC5C,sBAAMA,UAAW,cAAjB,SACI,eAACG,EAAA,EAAD,CAAaH,UAAW,2BAAxB,UACI,cAACI,EAAA,EAAD,CAAWC,MAAM,WAAWC,QAAQ,WACzBN,UAAW,2CACXO,MAAOzB,EACP0B,SAAU,SAAAC,GAAC,OAAE1B,EAAY0B,EAAEC,OAAOH,QAClCI,SAA0B,OAAhB/D,IAErB,cAACwD,EAAA,EAAD,CAAWC,MAAM,WAAWC,QAAQ,WACzBM,KAAK,WACLZ,UAAW,2CACXO,MAAOvB,EACPwB,SAAU,SAAAC,GAAC,OAAExB,EAAYwB,EAAEC,OAAOH,QAClCI,SAA0B,OAAhB/D,IAErB,eAACiE,EAAA,EAAD,CAAOC,SAAS,QAAQd,UAAW,qBAAnC,UACI,cAACe,EAAA,EAAD,oBACC7E,KAEL,cAAC8E,EAAA,EAAD,CAAQV,QAAQ,YAAYW,MAAM,UAC1BjB,UAAW,mBACXkB,QArCJ,SAACT,GAGjB,GAFAA,EAAEU,iBACF/D,QAAQC,IAAI,eACTyB,GAAYE,EAAS,CACpB,IAAMoC,EAAY,CACdtC,SAAUA,EAASuC,oBACnBrC,YAEJK,EAASjD,EAAagF,MA8BNT,UAAW7B,IAAaE,GAA4B,OAAhBpC,EACpCgE,KAAM,SAJd,mBAQA,cAACU,EAAA,EAAD,CAAkBtB,UAAW,oBAAqBL,MAAO,CAACC,QAAS,eAG3E,cAACoB,EAAA,EAAD,CAAQhB,UAAW,gBACXkB,QAAS,WACL/B,EAAQW,KAAK,YAFzB,yB,0BCvHCyB,EAAS,WAElB,MAAwB1C,mBAAS,IAAjC,mBAAOpC,EAAP,KAAa+E,EAAb,KACA,EAAkC3C,mBAAS,IAA3C,mBAAO4C,EAAP,KAAkBC,EAAlB,KACA,EAA0B7C,mBAAS,IAAnC,mBAAO8C,EAAP,KAAcC,EAAd,KACA,EAA0B/C,mBAAS,IAAnC,mBAAOgD,EAAP,KAAcC,EAAd,KACA,EAA0BjD,wBAASkD,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCpD,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA8CJ,mBAAS,IAAvD,mBAAOqD,EAAP,KAAwBC,EAAxB,KAEMhD,EAAUC,cACVC,EAAWC,cAEX9D,EAAO+D,YAAYf,GAEzBgB,qBAAU,WACM,OAAThE,GACC2D,EAAQW,KAAK,WAElB,CAACtE,IAyCJ,OACI,sBAAKwE,UAAW,SAAhB,UACI,qBAAKC,IAAK,aAAcC,IAAK,GAAIF,UAAW,gBAC5C,uBAAMA,UAAW,eAAjB,UACI,cAACI,EAAA,EAAD,CAAWC,MAAM,OAAOC,QAAQ,WACrBN,UAAW,yCACXO,MAAO9D,EACP+D,SAAU,SAAAC,GAAC,OAAEe,EAAQf,EAAEC,OAAOH,UAEzC,cAACH,EAAA,EAAD,CAAWC,MAAM,aAAaC,QAAQ,WAC3BN,UAAW,8CACXO,MAAOkB,EACPjB,SAAU,SAAAC,GAAC,OAAEiB,EAAajB,EAAEC,OAAOH,UAE9C,cAACH,EAAA,EAAD,CAAWC,MAAM,QAAQC,QAAQ,WACtBN,UAAW,0CACXO,MAAOoB,EACPnB,SAAU,SAAAC,GAAC,OAAEmB,EAASnB,EAAEC,OAAOH,UAE1C,cAACH,EAAA,EAAD,CAAWC,MAAM,eAAeC,QAAQ,WAC7BN,UAAW,0CACXO,MAAOsB,EACPrB,SAAU,SAAAC,GAAC,OAAEqB,EAASrB,EAAEC,OAAOH,UAE1C,wBAAOP,UAAW,0CAA2CoC,QAAS,QAAtE,UACI,eAACpB,EAAA,EAAD,CAAQV,QAAQ,YAAYW,MAAM,UAAUoB,UAAU,OAAtD,UACI,cAAC,IAAD,CAAWrC,UAAW,8BAD1B,kBAIA,uBAAOsC,GAAI,QAAS3C,MAAO,CAACC,QAAS,QAASgB,KAAM,OAC7CJ,SAAU,SAAAC,GACHA,EAAEC,OAAO6B,MAAM,IACdN,EAASxB,EAAEC,OAAO6B,MAAM,UAI3C,cAACnC,EAAA,EAAD,CAAWC,MAAM,WAAWC,QAAQ,WACzBN,UAAW,6CACXO,MAAOzB,EACP0B,SAAU,SAAAC,GAAC,OAAE1B,EAAY0B,EAAEC,OAAOH,UAE7C,cAACH,EAAA,EAAD,CAAWC,MAAM,WAAWC,QAAQ,WACzBN,UAAW,6CACXY,KAAK,WACLL,MAAOvB,EACPwB,SAAU,SAAAC,GAAC,OAAExB,EAAYwB,EAAEC,OAAOH,UAE7C,cAACH,EAAA,EAAD,CAAWC,MAAM,mBAAmBC,QAAQ,WACjCN,UAAW,oDACXY,KAAK,WACLL,MAAO2B,EACP1B,SAAU,SAAAC,GAAC,OAAE0B,EAAmB1B,EAAEC,OAAOH,UAEpD,cAACS,EAAA,EAAD,CAAQV,QAAQ,YAAYW,MAAM,UAC1BjB,UAAW,oBACXkB,QA9FC,SAACT,GAElB,GADAA,EAAEU,iBACC1E,GAAQgF,GAAa3C,GAAYE,GAAYkD,EAC5C,GAAGlD,IAAakD,GACZ,GAAGF,EAAM,CAEL,IAAMQ,EAAW,IAAIC,SACrBD,EAASE,OAAO,OAAQV,GACxBrG,IAAMC,KAAKV,qCAAuCsH,GAAU3G,MAAK,SAACC,GAC9D,IAAM6G,EAAU,CACZlG,KAAMA,EAAKmG,cACXnB,YACAE,MAAOA,GAAgB,GACvBE,MAAOA,GAAgB,GACvBgB,YAAa/G,EAAIC,KAAOD,EAAIC,KAAO,GACnC+C,SAAUA,EAASgE,cACnB9D,YAEJ5B,QAAQC,IAAIsF,GACZtD,EAAS/D,EAAWqH,IACpBnB,EAAQ,IACRE,EAAa,IACbE,EAAS,IACTE,EAAS,IACT/C,EAAY,IACZE,EAAY,IACZkD,EAAmB,aAK3BY,MAAM,mCAIVA,MAAM,sBA4DMpC,WAAYlE,GAAQgF,GAAa3C,GAAYE,GAAYkD,GAHjE,wBAQJ,cAAClB,EAAA,EAAD,CAAQhB,UAAW,gBACXkB,QAAS,WACL/B,EAAQW,KAAK,WAFzB,uB,sNCvHCkD,GAAgBzH,YACzB,cADyC,uCAEzC,WAAO0H,EAAQxH,GAAf,eAAAC,EAAA,+EAE+BC,IAAMC,KAAKV,oCAAsC+H,GAAQpH,MAAK,SAAAC,GACjF,OAAOA,EAAIC,QAHvB,cAEcC,EAFd,yBAKeA,GALf,yDAOeP,EAASQ,gBAAgB,CAAEC,MAAO,KAAMC,WAPvD,yDAFyC,yDAahC+G,GAAe3H,YACxB,cADwC,uCAExC,WAAO4H,EAAY1H,GAAnB,eAAAC,EAAA,+EAE+BC,IAAMC,KAAKV,oCAAsCiI,GAAYtH,MAAK,SAAAC,GACrF,OAAOA,EAAIC,QAHvB,cAEcC,EAFd,yBAKeA,GALf,yDAOeP,EAASQ,gBAAgB,CAAEC,MAAO,KAAMC,WAPvD,yDAFwC,yDAa/BiH,GAAkB7H,YAC3B,iBAD2C,uCAE3C,WAAO8H,EAAe5H,GAAtB,eAAAC,EAAA,+EAE+BC,IAAMC,KAAKV,uCAAyCmI,GAAexH,MAAK,SAAAC,GAC3F,OAAOA,EAAIC,QAHvB,cAEcC,EAFd,yBAKeA,GALf,yDAOeP,EAASQ,gBAAgB,CAAEC,MAAO,KAAMC,WAPvD,yDAF2C,yDAalCmH,GAAU/H,YACnB,WADmC,uCAEnC,WAAOe,EAAQb,GAAf,eAAAC,EAAA,+EAE+BC,IAAM4H,IAAIrI,0CAA2CoB,GAAQT,MAAK,SAAAC,GACrF,OAAOA,EAAIC,QAHvB,cAEcC,EAFd,yBAKeA,GALf,yDAOeP,EAASQ,gBAAgB,CAAEC,MAAO,KAAMC,WAPvD,yDAFmC,yDAa1BqH,GAAgBjI,YACzB,qBADyC,uCAEzC,WAAOkI,EAAUhI,GAAjB,eAAAC,EAAA,+EAE+BC,IAAMC,KAAKV,wCAA0CuI,GAAU5H,MAAK,SAAAC,GACvF,OAAOA,EAAIC,QAHvB,cAEcC,EAFd,yBAKeA,GALf,yDAOeP,EAASQ,gBAAgB,CAAEC,MAAO,KAAMC,WAPvD,yDAFyC,yDAahCuH,GAAenI,YACxB,oBADwC,uCAExC,WAAOoI,EAAelI,GAAtB,SAAAC,EAAA,+EAEcC,IAAMC,KAAKV,0CAA4CyI,GAFrE,+EAIelI,EAASQ,gBAAgB,CAAEC,MAAO,KAAMC,WAJvD,wDAFwC,yDAW/ByH,GAAcpH,YAAY,CACnCC,KAAM,SACNC,aAxFiB,CACjBuG,OAAO,CACHY,QAAS,GACTC,cAAc,GAElBC,aAAa,CACTC,WAAY,KAmFhBnH,SAAU,GACVa,eAAa,mBAERsF,GAAc1E,SAAU,SAACvB,EAAOa,GAC7Bb,EAAMkG,OAAOa,cAAe,EAC5B/G,EAAMkG,OAAOY,QAAU,MAJlB,cAMRb,GAAcrF,WAAY,SAACZ,EAAOa,GAE/Bb,EAAMkG,OAAOa,cAAe,EAC5B/G,EAAMkG,OAAOY,QAAUjG,EAAOC,WATzB,cAYRqF,GAAavF,WAAY,SAACZ,EAAOa,OAZzB,cAgBRwF,GAAgBzF,WAAY,SAACZ,EAAOa,OAhB5B,cAoBR0F,GAAQ3F,WAAY,SAACZ,EAAOa,GACzBb,EAAMgH,aAAaC,WAAWlE,KAAKlC,EAAOC,YArBrC,cAuBR2F,GAAc7F,WAAY,SAACZ,EAAOa,GAC/Bb,EAAMgH,aAAaC,WAAa,GAChCjH,EAAMgH,aAAaC,WAAapG,EAAOC,WAzBlC,KAiCJoG,GAAgB,SAAClH,GAAD,OAAWA,EAAMmH,OAAOjB,OAAOY,SAC/CM,GAAqB,SAACpH,GAAD,OAAWA,EAAMmH,OAAOjB,OAAOa,cACpDM,GAAmB,SAACrH,GAAD,OAAWA,EAAMmH,OAAOH,aAAaC,YAEtDJ,MAAf,Q,yCC3HaS,GAAY9I,YACrB,iBADqC,uCAErC,WAAOoI,EAAelI,GAAtB,SAAAC,EAAA,+EAEcC,IAAMC,KAAKV,uCAAyCyI,GAFlE,+EAIelI,EAASQ,gBAAgB,CAAEC,MAAO,KAAMC,WAJvD,wDAFqC,yDAU5BmI,GAAe/I,YACxB,oBADwC,uCAExC,WAAOgJ,EAAc9I,GAArB,SAAAC,EAAA,+EAEcC,IAAMC,KAAKV,0CAA4CqJ,GAFrE,+EAIe9I,EAASQ,gBAAgB,CAAEC,MAAO,KAAMC,WAJvD,wDAFwC,yDAU/BqI,GAAajJ,YACtB,kBADsC,uCAEtC,WAAOe,EAAQb,GAAf,eAAAC,EAAA,+EAE+BC,IAAMC,KAAKV,wCAA0CoB,GAAQT,MAAK,SAAAC,GACrF,OAAOA,EAAIC,QAHvB,cAEcC,EAFd,yBAKeA,GALf,yDAOeP,EAASQ,gBAAgB,CAAEC,MAAO,KAAMC,WAPvD,yDAFsC,yDAa7BsI,GAAkBjI,YAAY,CACvCC,KAAM,aACNC,aAvCiB,CACjBmH,QAAS,IAuCThH,SAAU,GACVa,cAAc,eAET8G,GAAW7G,WAAY,SAACZ,EAAOa,GAC5Bb,EAAM8G,QAAUjG,EAAOC,aAOtBoG,GAAgB,SAAAlH,GAAK,OAAIA,EAAM2H,WAAWb,SAGxCY,MAAf,QC1BaE,GAAS,WAElB,IAAMnJ,EAAO+D,YAAYf,GAEnBa,EAAWC,cACXH,EAAUC,cAEhB,EAAgCP,oBAAS,GAAzC,mBAAO+F,EAAP,KAAiBC,EAAjB,KACA,EAA4BhG,mBAAS,IAArC,mBAAOoE,EAAP,KAAe6B,EAAf,KACA,EAA0BjG,oBAAS,GAAnC,mBAAOkG,EAAP,KAAcC,EAAd,KACA,EAAgDnG,oBAAS,GAAzD,mBAAOoG,EAAP,KAAyBC,EAAzB,KAEMrB,EAAUtE,YAAY0E,IACtBH,EAAevE,YAAY4E,IAC3BH,EAAazE,YAAY6E,IAG/B5E,qBAAU,WACN,IAAM2F,EAAO1F,SAASC,cAAc,SAC9BmE,EAAUpE,SAASC,cAAc,eACjC0F,EAAW3F,SAASC,cAAc,aAC5B,OAATyF,IACKJ,GACAI,EAAKxF,MAAM0F,OAAS,kBACpBxB,EAAQlE,MAAM0F,OAAS,kBACvBD,EAASzF,MAAM0F,OAAS,oBAExBF,EAAKxF,MAAM0F,OAAS,mBACpBxB,EAAQlE,MAAM0F,OAAS,mBACvBD,EAASzF,MAAM0F,OAAS,uBAIjC,CAACN,IAEJvF,qBAAU,WACQ,KAAXyD,GACC5D,EAAS2D,GAAc,CAACC,OAAQA,EAAQ3G,OAAQd,EAAKqE,SAE1D,CAACoD,IA0BJxD,SAAS6F,QAAU,SAAC7E,GAGhB,IAAM8E,EAAa9F,SAASC,cAAc,qCAI1C,GAHG6F,IAAe9F,SAAS+F,eACvBR,GAAS,GAEVD,IAAUQ,EAAWE,SAAShF,EAAEC,QAAQ,CACvC,IAAMgF,EAAYjG,SAASC,cAAc,sBACxB,OAAdgG,GACKA,EAAUD,SAAShF,EAAEC,SAIzBsE,GAAS,GAIjB,GAAGJ,EAAS,CACR,IAAMe,EAAUlG,SAASC,cAAc,6BACvC,GAAe,OAAZiG,EACC,IAAIA,EAAQF,SAAShF,EAAEC,QACAjB,SAASC,cAAc,iBAC1B+F,SAAShF,EAAEC,UACvBmE,GAAY,GACZpF,SAASC,cAAc,mCAAmCC,MAAMsB,MAAQ,WAKxF,GAAGgE,EAAiB,CAChB,IAAMW,EAAkBnG,SAASC,cAAc,qCAC/C,GAAuB,OAApBkG,EACC,IAAIA,EAAgBH,SAAShF,EAAEC,QACAjB,SAASC,cAAc,yBAC3B+F,SAAShF,EAAEC,UAC9BwE,GAAoB,GACpBzF,SAASC,cAAc,2CAA2CC,MAAMsB,MAAQ,aAyCpG,OA3BAzB,qBAAU,WACM,OAAThE,GAAiC,IAAhBA,EAAK4C,QACrBe,EAAQW,KAAK,UAEL,OAATtE,GACC6D,EAASmE,GAAc,CAACC,SAAUjI,EAAKqE,OAE3C,IAAMgG,EAAU1K,EAAO2K,UAAU,SACjCD,EAAQE,KAAK,YAAY,SAAShK,GAC9BqB,QAAQC,IAAI,wBACA,OAAT7B,GACC6D,EAAS2D,GAAc,CAACC,OAAQA,EAAQ3G,OAAQd,EAAKqE,UAG7DgG,EAAQE,KAAK,WAAW,SAAShK,GAC7BqB,QAAQC,IAAI,uBACA,OAAT7B,IACC6D,EAAShD,EAAU,CAACC,OAAQd,EAAKqE,OACjCR,EAAS2D,GAAc,CAACC,OAAQA,EAAQ3G,OAAQd,EAAKqE,OACrDR,EAASmE,GAAc,CAACC,SAAUjI,EAAKqE,OACvCR,EAASmF,GAAW,CAACf,SAAUjI,EAAKqE,aAI7C,IAIC,sBAAKG,UAAW,SAAhB,UACI,sBAAKA,UAAW,iBAAhB,UACI,qBAAKA,UAAW,sBAAuBC,IAAK,0BAA2BC,IAAK,KAC5E,sBAAKF,UAAW,4BAAhB,UACI,cAAC,KAAD,CAAYA,UAAW,kCAAmCgG,SAAS,SAAS/E,MAAM,WAClF,uBAAOjB,UAAW,mCAAoCiG,YAAY,iBAC3DrF,KAAM,OACNL,MAAO0C,EACPzC,SAAU,SAACC,GAAD,OAAKqE,EAAUrE,EAAEC,OAAOH,gBAK7CwE,GACsB,IAAlB9B,EAAO7E,OACH,qBAAK4B,UAAW,oBAAhB,SAES8D,EAoEG,cAAC,KAAD,CAAkB7C,MAAM,cAnEL,IAAnB4C,EAAQzF,OACJyF,EAAQqC,KAAI,SAAAC,GAAC,OACT,sBAAiBnG,UAAW,4BAA5B,UACI,sBAAKA,UAAW,yCAAhB,UACI,cAACoG,GAAA,EAAD,CAAQnG,IAAKjF,EAASmL,EAAEtD,aAAc3C,IAAKiG,EAAErH,SAAS8D,cAC9C5C,UAAW,mDAEnB,iCAAOmG,EAAE1E,UAAT,IAAqB0E,EAAE1J,WAGvBjB,EAAK6K,UAAUC,SAASC,OAAOJ,EAAEtG,MAC7B,cAAC,KAAD,CAAQS,QAAQ,OACRN,UAAW,iCACXwG,KAAM,QACNtF,QAAS,WAEL7B,EAASiF,GAAa,CAAChI,OAAQd,EAAKqE,IAAK4G,SAAUN,EAAEtG,QALjE,8BASArE,EAAKkL,WAAWJ,SAASC,OAAOJ,EAAEtG,MAC9B,sBAAKG,UAAW,uCAAhB,UACI,cAAC,KAAD,CACIkB,QAAS,WACL7B,EAASgF,GAAU,CAAC/H,OAAQd,EAAKqE,IAAK8G,UAAWR,EAAEtG,QAEvDG,UAAW,6CACXwG,KAAK,QACLlG,QAAQ,OANZ,oBAOA,cAAC,KAAD,CACIY,QAAS,WACL7B,EAASqE,GAAa,CAACpH,OAAQd,EAAKqE,IAAK8G,UAAWR,EAAEtG,QAE1DG,UAAW,6CACXwG,KAAK,QACLvF,MAAM,YACNX,QAAQ,OAPZ,uBAUH6F,EAAEO,WAAWJ,SAASC,OAAO/K,EAAKqE,MAU/B,cAAC,KAAD,CAAQS,QAAQ,WACRN,UAAW,iCACXwG,KAAM,QACNtF,QAAS,WAEL7B,EAAS+D,GAAgB,CAAC9G,OAAQd,EAAKqE,IAAK8G,UAAWR,EAAEtG,QALrE,uBATA,cAAC,KAAD,CAAQS,QAAQ,YACRkG,KAAM,QACNxG,UAAW,iCACXkB,QAAS,WAEL7B,EAAS6D,GAAa,CAAC5G,OAAQd,EAAKqE,IAAK8G,UAAWR,EAAEtG,QALlE,sBAtCVsG,EAAEtG,QA2DhB,sBAAKG,UAAW,8BAAhB,UACI,cAAC,KAAD,CAA+BA,UAAW,sCAC1C,mBAAGA,UAAW,oCAAd,4BAUxB,GAER,sBAAKA,UAAW,cAAhB,UACI,sBAAKA,UAAW,8CAAhB,UACI,cAAC,IAAD,CAAUA,UAAW,yBAA0BiB,MAAO,UAAW+E,SAAU,WAC3E,4BAEJ,qBAAKhG,UAAW,sCAAhB,SACI,cAAC,IAAD,CAAmBA,UAAW,yBAA0BiB,MAAO,UAAW+E,SAAU,aAExF,qBAAKhG,UAAW,4CAAhB,SACI,cAAC,IAAD,CAAgBA,UAAW,yBAA0BiB,MAAO,UAAW+E,SAAU,gBAGzF,sBAAKhG,UAAW,kBAAhB,UACI,sBAAKA,UAAW,wBAAhB,UACI,cAACoG,GAAA,EAAD,CAAQpG,UAAW,gCAAiCE,IAAK,GACjDD,IAAKjF,EAASQ,EAAOA,EAAKqH,YAAc,MAEhD,yBAAQ7C,UAAW,8BAAnB,UAAmDxE,EAAOA,EAAKiG,UAAY,GAA3E,IAAgFjG,EAAMA,EAAKiB,KAAO,SAEtG,cAACmK,GAAA,EAAD,CAAY5G,UAAW,gDAAvB,SACI,cAAC,KAAD,CAAUA,UAAW,6BAA8BgG,SAAU,QAAS/E,MAAM,aAEhF,cAAC2F,GAAA,EAAD,CAAY5G,UAAW,wDACXkB,QA9MO,WACvB+D,GAIAC,GAAoB,GACpBzF,SAASC,cAAc,2CAA2CC,MAAMsB,MAAQ,YAJhFiE,GAAoB,GACpBzF,SAASC,cAAc,2CAA2CC,MAAMsB,MAAQ,SA0M5E,SAEI,cAAC,KAAD,CAAmBjB,UAAW,oEAAqEgG,SAAU,QAAS/E,MAAM,aAEhI,cAAC2F,GAAA,EAAD,CAAY5G,UAAW,gDACXkB,QA9ND,SAACT,GAChBmE,GAKAC,GAAY,GACZpF,SAASC,cAAc,mCAAmCC,MAAMsB,MAAQ,YALxE4D,GAAY,GACZpF,SAASC,cAAc,mCAAmCC,MAAMsB,MAAQ,SA0NpE,SAEI,cAAC,KAAD,CAAuBjB,UAAW,4DAA6DgG,SAAU,QAAS/E,MAAM,gBAI5H2D,EACI,sBAAK5E,UAAW,eAAhB,UACI,sBAAKA,UAAW,0CAAhB,UACI,cAACoG,GAAA,EAAD,CAAQpG,UAAW,gCAAiCE,IAAK1E,EAAKsD,SAAS,GAAG8D,cAAe3C,IAAKjF,EAASQ,EAAKqH,eAC5G,sBAAK7C,UAAW,8BAAhB,UACI,mCAASxE,EAAKiG,UAAd,IAA0BjG,EAAKiB,QAC/B,mBAAGuD,UAAW,2CAAd,qCAGR,sBAAKA,UAAW,2CAAhB,UACI,cAAC,KAAD,CAAcA,UAAW,4BAD7B,cAGA,sBAAKA,UAAW,yCACXkB,QA5KJ,WACjB7B,EAAS7B,KACT2B,EAAQW,KAAK,WAyKG,UAGI,cAAC,KAAD,CAAeE,UAAW,4BAH9B,gBAQJ,GAGJiF,EACI,qBAAKjF,UAAW,uBAAhB,SAE8B,IAAtBgE,EAAW5F,OACP4F,EAAWkC,KAAI,SAAAW,GAAS,OACpB,sBAAoC7G,UAAW,kCAA/C,UACI,sBAAKA,UAAW,+CAAhB,UACI,cAACoG,GAAA,EAAD,CACIpG,UAAW,uDACXC,IAAKjF,EAAS6L,EAAUhE,aAAc3C,IAAK2G,EAAU/H,SAAS,GAAG8D,gBACpEiE,EAAUpF,UAJf,IAI2BoF,EAAUpK,QAErC,sBAAKuD,UAAW,uCAAhB,UACI,cAAC,KAAD,CACIkB,QAAS,WACL7B,EAASgF,GAAU,CAAC/H,OAAQd,EAAKqE,IAAK8G,UAAWE,EAAUhH,QAE/DG,UAAW,6CACXwG,KAAK,QACLlG,QAAQ,OANZ,oBAOA,cAAC,KAAD,CACIY,QAAS,WACL7B,EAASqE,GAAa,CAACpH,OAAQd,EAAKqE,IAAK8G,UAAWE,EAAUhH,QAElEG,UAAW,6CACXwG,KAAK,QACLvF,MAAM,YACNX,QAAQ,OAPZ,yBAfE,WAAWuG,EAAUhH,QA4BnC,qBAAKG,UAAW,iCAAhB,oCAMZ,O,8BCjWP8G,GAAWvL,YACpB,gBADoC,uCAEpC,WAAOsI,EAASpI,GAAhB,eAAAC,EAAA,+EAE+BC,IAAMC,KAAKV,sCAAuC2I,GAAShI,MAAK,SAAAC,GACnF,OAAOA,EAAIC,QAHvB,cAEcC,EAFd,yBAKeA,GALf,yDAOeP,EAASQ,gBAAgB,CAAEC,MAAO,KAAMC,WAPvD,yDAFoC,yDAa3B4K,GAAaxL,YACtB,eADsC,uCAEtC,WAAOyL,EAASvL,GAAhB,SAAAC,EAAA,+EAEcC,IAAMC,KAAKV,oCAAsC8L,GAF/D,+EAIevL,EAASQ,gBAAgB,CAAEC,MAAO,KAAMC,WAJvD,wDAFsC,yDAU7B8K,GAAuB1L,YAChC,uBADgD,uCAEhD,WAAO2L,EAAYzL,GAAnB,SAAAC,EAAA,+EAEcC,IAAMC,KAAKV,4CAA8CgM,GAFvE,+EAIezL,EAASQ,gBAAgB,CAAEC,MAAO,KAAMC,WAJvD,wDAFgD,yDAUvCgL,GAAe5L,YACxB,YADwC,uCAExC,WAAO6L,EAAM3L,GAAb,SAAAC,EAAA,+EAEcC,IAAMC,KAAKV,kCAAoCkM,GAF7D,+EAIe3L,EAASQ,gBAAgB,CAAEC,MAAO,KAAMC,WAJvD,wDAFwC,yDAU/BkL,GAAkB9L,YAC3B,eAD2C,uCAE3C,WAAO6L,EAAM3L,GAAb,SAAAC,EAAA,+EAEcC,IAAMC,KAAKV,qCAAuCkM,GAFhE,+EAIe3L,EAASQ,gBAAgB,CAAEC,MAAO,KAAMC,WAJvD,wDAF2C,yDAUlCmL,GAAkB/L,YAC3B,oBAD2C,uCAE3C,WAAO6L,EAAM3L,GAAb,SAAAC,EAAA,+EAEcC,IAAMC,KAAKV,0CAA4CkM,GAFrE,+EAIe3L,EAASQ,gBAAgB,CAAEC,MAAO,KAAMC,WAJvD,wDAF2C,yDAUlCoL,GAAqBhM,YAC9B,uBAD8C,uCAE9C,WAAO6L,EAAM3L,GAAb,SAAAC,EAAA,+EAEcC,IAAMC,KAAKV,6CAA+CkM,GAFxE,+EAIe3L,EAASQ,gBAAgB,CAAEC,MAAO,KAAMC,WAJvD,wDAF8C,yDAUrCqL,GAAahL,YAAY,CAClCC,KAAM,QACNC,aAjFiB,CACjB+K,MAAO,GACPC,gBAAgB,EAChBC,mBAAmB,GA+EnB9K,SAAU,CACN+K,gBAAiB,CACbC,QADa,SACL9K,EAAOa,GACX,IAAMkK,EAASlK,EAAOC,QAAQiK,OACxBhJ,EAAWlB,EAAOC,QAAQiB,SAC1BiJ,EAAQhL,EAAM0K,MAAMO,WAAU,SAAAC,GAChC,OAAOA,EAAEpI,MAAQiI,MAEP,IAAXC,IACIhL,EAAM0K,MAAMM,GAAOG,MAAM5B,SAASxH,GACjC/B,EAAM0K,MAAMM,GAAOG,MAAMC,OAAOpL,EAAM0K,MAAMM,GAAOG,MAAME,QAAQtJ,GAAW,GAG5E/B,EAAM0K,MAAMM,GAAOG,MAAMpI,KAAKhB,KAI1CuJ,QAhBa,SAgBLP,EAAQhJ,GACZ,MAAM,CACFjB,QAAQ,CACJiK,OAAQA,EACRhJ,SAAUA,MAK1BwJ,mBAAoB,CAChBT,QADgB,SACR9K,EAAOa,GACX,IAAM2K,EAAYxL,EAAM0K,MAAMO,WAAU,SAAAC,GACpC,OAAOA,EAAEpI,MAAQjC,EAAOC,QAAQiK,UAEpC,IAAkB,IAAfS,EAAiB,CAChB,IAAMC,EAAezL,EAAM0K,MAAMc,GAAWE,SAAST,WAAU,SAAAU,GAC3D,OAAOA,EAAE7I,MAAQjC,EAAOC,QAAQ8K,cAEf,IAAlBH,IACIzL,EAAM0K,MAAMc,GAAWE,SAASD,GAAcN,MAAM5B,SAAS1I,EAAOC,QAAQiB,UAC3E/B,EAAM0K,MAAMc,GAAWE,SAASD,GAAcN,MAAMC,OAAOpL,EAAM0K,MAAMc,GAAWE,SAASD,GAAcN,MAAME,QAAQxK,EAAOC,QAAQiB,UAAW,GAGjJ/B,EAAM0K,MAAMc,GAAWE,SAASD,GAAcN,MAAMpI,KAAKlC,EAAOC,QAAQiB,aAKxFuJ,QAnBgB,SAmBRP,EAAQa,EAAW7J,GACvB,MAAM,CACFjB,QAAQ,CACJiK,OAAQA,EACRa,UAAWA,EACX7J,SAAUA,OAM9BpB,eAAa,mBAERoJ,GAASnJ,WAAY,SAACZ,EAAOa,GAC1Bb,EAAM0K,MAAQ7J,EAAOC,WAHhB,cAMRkJ,GAAWpJ,WAAY,SAACZ,EAAOa,GAC5BR,QAAQC,IAAI,iCAPP,cAUR4J,GAAqBtJ,WAAY,SAACZ,EAAOa,GACtCR,QAAQC,IAAI,oCAXP,cAcR8J,GAAaxJ,WAAY,SAACZ,EAAOa,OAdzB,cAiBRuJ,GAAa7I,SAAU,SAACvB,EAAOa,OAjBvB,cAqBRyJ,GAAgB1J,WAAY,SAACZ,EAAOa,OArB5B,cAwBRyJ,GAAgB/I,SAAU,SAACvB,EAAOa,OAxB1B,cA4BR0J,GAAgB3J,WAAY,SAACZ,EAAOa,OA5B5B,cAgCR2J,GAAmB5J,WAAY,SAACZ,EAAOa,OAhC/B,KAsCV,GAA8C4J,GAAWjJ,QAAlD+J,GAAP,GAAOA,mBAAoBV,GAA3B,GAA2BA,gBAErBgB,GAAc,SAAC7L,GAAD,OAAWA,EAAM0K,MAAMA,OAEnCD,MAAf,QC5KaqB,GAAS,WAElB,MAA8BhK,mBAAS,IAAvC,mBAAOiK,EAAP,KAAgBC,EAAhB,KACA,EAA0BlK,wBAASkD,GAAnC,mBAAciH,GAAd,WACA,EAA0BnK,wBAASkD,GAAnC,mBAAOkH,EAAP,KAAcC,EAAd,KACA,EAAwBrK,wBAASkD,GAAjC,mBAAaoH,GAAb,WAEM3N,EAAO+D,YAAYf,GACzB,EAAsBK,mBAAS,IAA/B,mBAAOuK,EAAP,KAAYC,EAAZ,KAEMhK,EAAWC,cAkCjB,OAJAE,qBAAU,WACN6J,EAAOrO,EAASQ,EAAKqH,gBACvB,IAGE,sBAAM7C,UAAW,eAAjB,SACI,eAACG,EAAA,EAAD,CAAaR,MAAO,CAAC2J,MAAO,OAA5B,UACI,sBAAKtJ,UAAW,wBAAhB,UACI,cAACoG,GAAA,EAAD,CAAQpG,UAAW,gCAAiCE,IAAI,IAAID,IAAKmJ,IACjE,uBAAOxI,KAAM,OACNqF,YAAa,UACbjG,UAAW,+BACXO,MAAOuI,EACPtI,SAAU,SAACC,GAAD,OAAOsI,EAAWtI,EAAEC,OAAOH,aAGhD,sBAAKP,UAAW,sBAAhB,UACI,wBAAOA,UAAW,wDAAyDoC,QAAS,QAApF,UACI,cAAC,IAAD,CAAWpC,UAAW,mCAAoCiB,MAAO,UADrE,gBAGI,uBAAOqB,GAAI,QAAS3C,MAAO,CAACC,QAAS,QAASgB,KAAM,OAC7CJ,SAAU,SAAAC,GACHA,EAAEC,OAAO6B,MAAM,IACd2G,EAASzI,EAAEC,OAAO6B,MAAM,UAI3C,wBAAOvC,UAAW,uDAAwDoC,QAAS,OAAnF,UACI,cAAC,KAAD,CAAUpC,UAAW,mCAAoCiB,MAAO,UADpE,aAKJ,wBAAQL,KAAM,SAAUZ,UAAW,oBAAqBL,MAAO,CAACC,QAAS,QACjEsB,QA7DC,SAACT,GAElB,GADAA,EAAEU,iBACC2H,EAAQ,CACP,IAAI9B,EAAU,CACV1K,OAAQd,EAAKqE,IACbf,SAAUtD,EAAKsD,SACf+D,YAAarH,EAAKqH,YAClBiG,QAASA,EACTS,UAAWC,KAAKC,MAChBvB,MAAO,GACPO,SAAU,GACViB,KAAM,IAEV,GAAGT,EAAM,CACL,IAAMzG,EAAW,IAAIC,SACrBD,EAASE,OAAO,OAAQuG,GACxBtN,IAAMC,KAAKV,qCAAuCsH,GAAU3G,MAAK,SAAAC,GAC7DkL,EAAO,QAAclL,EAAIC,KACzBsD,EAAS0H,GAAWC,OAG5B+B,EAAW,IACXG,OAASnH,GACTiH,OAASjH,GACToH,OAAQpH,KAoCJ,0B,2EC1EH4H,GAAU,SAAC,GAAwE,IAAvE7B,EAAsE,EAAtEA,OAAQa,EAA8D,EAA9DA,UAAwB7J,GAAsC,EAAnD+D,YAAmD,EAAtC/D,UAAUyK,EAA4B,EAA5BA,UAAWK,EAAiB,EAAjBA,KAAM1B,EAAW,EAAXA,MAE1E7I,EAAWC,cACX9D,EAAO+D,YAAYf,GACzB,EAA0BK,mBAAS,GAAnC,mBAAOgL,EAAP,KAAcC,EAAd,KACA,EAAwBjL,mBAAS,GAAjC,mBAAOkL,EAAP,KAAaC,EAAb,KAEAxK,qBAAU,WACH0I,EAAM5B,SAAS9K,EAAKsD,UACnBW,SAASwK,eAAT,wBAAyCnC,EAAzC,YAAmDa,IAAahJ,MAAMsB,MAAQ,OAG9ExB,SAASwK,eAAT,wBAAyCnC,EAAzC,YAAmDa,IAAahJ,MAAMsB,MAAQ,SAEnF,IA+BH,OACI,sBAAKjB,UAAW,UAAWsC,GAAIqG,EAA/B,UACI,cAACvC,GAAA,EAAD,CAAQpG,UAAW,kBAAmBE,IAAK1E,EAAKsD,SAAS,GAAG8D,cAAe3C,IAAKjF,EAASQ,EAAKqH,eAC9F,sBAAK7C,UAAW,gCAAhB,UACI,wBAAQA,UAAW,sCAAnB,SAA2DlB,IAC3D,mBAAGkB,UAAW,sCAAd,SAAsD4J,IACtD,sBAAK5J,UAAW,wCAAhB,UACI,sBAAKA,UAAW,+CACXkB,QArCK,WACtBgJ,aAAaL,GACbzM,QAAQC,IAAIsL,GACRT,EAAM5B,SAAS9K,EAAKsD,WAYpBW,SAASwK,eAAT,wBAAyCnC,EAAzC,YAAmDa,IAAahJ,MAAMsB,MAAQ,OAClE,IAAT8I,EACCC,EAAQ,IAERA,EAAQ,GACRF,EAAS/J,YAAW,WAChBV,EAASkI,GAAmB,CAACO,OAAQA,EAAQa,UAAWA,EAAW7J,SAAUtD,EAAKsD,YAClFkL,EAAQ,KACT,SAnBPvK,SAASwK,eAAT,wBAAyCnC,EAAzC,YAAmDa,IAAahJ,MAAMsB,MAAQ,OAClE,IAAT8I,EACCC,EAAQ,IAERA,EAAQ,GACRF,EAAS/J,YAAW,WAChBV,EAASiI,GAAgB,CAACQ,OAAQA,EAAQa,UAAWA,EAAW7J,SAAUtD,EAAKsD,YAC/EkL,EAAQ,KACT,QAcX3K,EAASiJ,GAAmBR,EAAQa,EAAWnN,EAAKsD,YAUxC,UAGI,cAAC,KAAD,CAAgBkB,UAAW,qDACXgG,SAAU,QACV1D,GAAE,wBAAmBwF,EAAnB,YAA6Ba,KAE9CT,EAAM9J,UAEX,qBAAK4B,UAAW,mDAAhB,SACKmK,yCAA8BZ,EAAWC,KAAKC,mB,mBC7D1DW,GAAgB,SAAC,GAAc,IAAbtC,EAAY,EAAZA,OAGrBtM,EAAO+D,YAAYf,GACzB,EAA8BK,mBAAS,IAAvC,mBAAOwL,EAAP,KAAgBC,EAAhB,KACMjL,EAAWC,cAmBjB,OACI,sBAAMU,UAAW,mCAAjB,SACI,eAACG,EAAA,EAAD,CAAaH,UAAW,gDAAxB,UACI,cAACoG,GAAA,EAAD,CAAQpG,UAAW,2CAA4CE,IAAK1E,EAAKsD,SAAS,GAAG8D,cAAe3C,IAAKjF,EAASQ,EAAKqH,eACvH,cAAC0H,GAAA,EAAD,CAAOvK,UAAW,0CAA2CiG,YAAY,UAClE1F,MAAO8J,EACP7J,SAAU,SAAAC,GAAC,OAAI6J,EAAW7J,EAAEC,OAAOH,UAE1C,wBAAQP,UAAW,wCAAyCL,MAAO,CAACC,QAAS,QACrEsB,QA1BQ,SAACT,GACzBA,EAAEU,iBACF,IAAM+F,EAAa,CACfY,OAAQA,EACRuC,QAAQ,CACJvL,SAAUtD,EAAKsD,SACf+D,YAAarH,EAAKqH,YAClB+G,KAAMS,EACNd,UAAWC,KAAKC,MAChBvB,MAAO,KAIf7I,EAAS4H,GAAqBC,IAC9BoD,EAAW,a,0CCdNE,GAAO,SAAC,GAA+E,IAA9E1C,EAA6E,EAA7EA,OAAQ2C,EAAqE,EAArEA,QAAS3L,EAA4D,EAA5DA,SAAUyK,EAAkD,EAAlDA,UAAWT,EAAuC,EAAvCA,QAAS4B,EAA8B,EAA9BA,QAASxC,EAAqB,EAArBA,MAAOO,EAAc,EAAdA,SAE3EpJ,EAAWC,cACX9D,EAAO+D,YAAYf,GACzB,EAA0BK,mBAAS,GAAnC,mBAAOgL,EAAP,KAAcC,EAAd,KACA,EAAwBjL,mBAAS,GAAjC,mBAAOkL,EAAP,KAAaC,EAAb,KACA,EAA8CnL,oBAAS,GAAvD,mBAAO8L,EAAP,KAAwBC,EAAxB,KAEApL,qBAAU,WACH0I,EAAM5B,SAAS9K,EAAKsD,UACnBW,SAASwK,eAAT,qBAAsCnC,IAAUnI,MAAMsB,MAAQ,OAG9DxB,SAASwK,eAAT,qBAAsCnC,IAAUnI,MAAMsB,MAAQ,SAEnE,IAqDH,OACI,sBAAKjB,UAAW,oBAAqBsC,GAAI,sBAAwBwF,EAAjE,UACI,sBAAK9H,UAAW,0BAAhB,UACI,cAACoG,GAAA,EAAD,CAAQpG,UAAW,kCAAmCE,IAAKpB,EAAS,GAAImB,IAAKjF,EAASyP,KACtF,sBAAKzK,UAAW,gCAAhB,UACI,wBAAQA,UAAW,0CAAnB,SAA+DlB,IAC/D,sBAAMkB,UAAW,2CAAjB,SACKmK,yCAA8BZ,EAAWC,KAAKC,eAI3D,qBAAKzJ,UAAW,6BAAhB,SACK8I,IAGW,OAAZ4B,EACI,CAAC,OAAQ,QAAS,QAAQpE,SAASuE,KAAKC,QAAQJ,IAC5C,qBAAKzK,IAAKjF,EAAS0P,GAAUxK,IAAK,GAAIF,UAAW,6BAEjD,uBAAO+K,UAAQ,EAAC/K,UAAW,2BAA3B,SACI,wBAAQC,IAAKjF,EAAS0P,OAI9B,GAER,sBAAK1K,UAAW,4BAAhB,UACI,eAAC4G,GAAA,EAAD,CAAY5G,UAAW,mCAClBkB,QA/EM,WACnBgJ,aAAaL,GACT3B,EAAM5B,SAAS9K,EAAKsD,WAepBW,SAASwK,eAAT,qBAAsCnC,IAAUnI,MAAMsB,MAAQ,OAClD,IAAT8I,EACCC,EAAQ,IAGRA,EAAQ,GACRF,EAAS/J,YAAW,WAChBV,EAASgI,GAAgB,CAACS,SAAQhJ,SAAUtD,EAAKsD,YACjDkL,EAAQ,KACV,SAvBNvK,SAASwK,eAAT,qBAAsCnC,IAAUnI,MAAMsB,MAAQ,OAClD,IAAT8I,EAECC,EAAQ,IAGRA,EAAQ,GACRF,EAAS/J,YAAW,WAChBV,EAAS8H,GAAa,CAACW,SAAQhJ,SAAUtD,EAAKsD,YAC9CkL,EAAQ,KACV,QAgBV3K,EAASuI,GAAgBE,EAAQtM,EAAKsD,YAiD9B,UAGI,cAAC,KAAD,CAAgBkB,UAAW,yCACXsC,GAAE,qBAAgBwF,KAC/BI,EAAM9J,UAEb,eAACwI,GAAA,EAAD,CAAY5G,UAAW,sCAClBkB,QAtDW,SAACT,GAGrBmK,GADDD,IAmDK,UAGI,cAAC,KAAD,CAAa3K,UAAW,4CACXL,MAAO,CAACsB,MAAO,SAE5B,+BAAOwH,EAASrK,eAGxB,cAAC,GAAD,CAAe0J,OAAQA,IAEC,IAApBW,EAASrK,OACLuM,EACI,qBAAK3K,UAAW,8BAAhB,SACKyI,EAASvC,KAAI,SAACmE,GAAD,OACV,cAAC,GAAD,CACSvC,OAAQA,EACRa,UAAW0B,EAAQxK,IACnBgD,YAAawH,EAAQxH,YACrB/D,SAAUuL,EAAQvL,SAClByK,UAAWc,EAAQd,UACnBK,KAAMS,EAAQT,KACd1B,MAAOmC,EAAQnC,OAPVmC,EAAQxK,UAY9B,cAACmB,EAAA,EAAD,CAAQhB,UAAW,kCAAmCM,QAAQ,YAAYW,MAAM,UACxEC,QAAS,kBAAI0J,GAAmB,IADxC,SAGI,cAAC,KAAD,CAAe5E,SAAU,aAIjC,OClJPgF,GAAQ,WAEjB,IAAMvD,EAAQlI,YAAYqJ,IACpBpN,EAAO+D,YAAYf,GAEnBa,EAAWC,cAiBjB,OAfAE,qBAAU,WACN,IAAMqG,EAAU1K,EAAO2K,UAAU,SACjCD,EAAQE,KAAK,YAAY,SAAShK,GAC9BsD,EAASyH,GAAS,CAACxK,OAAQd,EAAKqE,IAAKgE,QAASrI,EAAK6K,gBAEvDR,EAAQE,KAAK,WAAW,SAAShK,GAC7BsD,EAASyH,GAAS,CAACxK,OAAQd,EAAKqE,IAAKgE,QAASrI,EAAK6K,kBAEzD,IAEF7G,qBAAU,WACNH,EAASyH,GAAS,CAACxK,OAAQd,EAAKqE,IAAKgE,QAASrI,EAAK6K,eACpD,IAIC,qBAAKrG,UAAW,cAAhB,SACKyH,GAA0B,IAAjBA,EAAMrJ,OACZqJ,EAAMvB,KAAK,SAAAtK,GAAI,OACX,cAAC,GAAD,CAAMkM,OAAQlM,EAAKiE,IAEb4K,QAAS7O,EAAKiH,YACd/D,SAAUlD,EAAKkD,SACfyK,UAAW3N,EAAK2N,UAChBT,QAASlN,EAAKkN,QACd4B,QAAS9O,EAAK8O,QACdjC,SAAU7M,EAAK6M,SACfP,MAAOtM,EAAKsM,MACZ+C,UAAWrP,EAAKqP,UAChBvB,KAAM9N,EAAK8N,MATN9N,EAAKiE,QAapB,MC3CHqL,I,OAAO,WAChB,OACI,sBAAKlL,UAAW,OAAhB,UACI,cAAC,GAAD,IACA,cAAC,GAAD,S,kHCKCmL,GAAU,WAEnB,IAAM3P,EAAO+D,YAAYf,GACzB,EAAsBK,mBAAS,IAA/B,mBAAOuK,EAAP,KAAYC,EAAZ,KAKA,OAJA7J,qBAAU,WACN6J,EAAOrO,EAASQ,EAAKqH,gBACtB,IAGC,sBAAK7C,UAAW,UAAhB,UACI,sBAAKA,UAAW,gBAAhB,UACI,cAACoG,GAAA,EAAD,CAAQpG,UAAW,wBAAyBE,IAAI,IAAID,IAAKmJ,IACzD,yBAAQpJ,UAAW,sBAAnB,UAA2CxE,EAAKiG,UAAhD,IAA4DjG,EAAKiB,WAErE,sBAAKuD,UAAW,gCAAhB,UACI,cAAC,KAAD,CAAmBA,UAAW,uBAAwBL,MAAO,CAACsB,MAAM,aACpE,wBAAQjB,UAAW,sBAAnB,4CAEJ,sBAAKA,UAAW,gCAAhB,UACI,cAAC,KAAD,CAAgBA,UAAW,uBAAwBL,MAAO,CAACsB,MAAM,aACjE,wBAAQjB,UAAW,sBAAnB,sBAEJ,sBAAKA,UAAW,kCAAhB,UACI,cAAC,KAAD,CAAeA,UAAW,uBAAwBL,MAAO,CAACsB,MAAM,aAChE,wBAAQjB,UAAW,sBAAnB,wBAEJ,sBAAKA,UAAW,qCAAhB,UACI,cAAC,KAAD,CAAUA,UAAW,uBAAwBL,MAAO,CAACsB,MAAM,aAC3D,wBAAQjB,UAAW,sBAAnB,2BAEJ,sBAAKA,UAAW,sCAAhB,UACI,cAAC,IAAD,CAAgBA,UAAW,uBAAwBL,MAAO,CAACsB,MAAM,aACjE,wBAAQjB,UAAW,sBAAnB,4BAEJ,sBAAKA,UAAW,iCAAhB,UACI,cAAC,KAAD,CAAaA,UAAW,uBAAwBL,MAAO,CAACsB,MAAM,aAC9D,wBAAQjB,UAAW,sBAAnB,uBAEJ,sBAAKA,UAAW,+BAAhB,UACI,cAAC,KAAD,CAAgBA,UAAW,uBAAwBL,MAAO,CAACsB,MAAM,aACjE,wBAAQjB,UAAW,sBAAnB,yB,mBC7CHoL,GAAgB7P,YACzB,yBADyC,uCAEzC,WAAO8P,EAAS5P,GAAhB,eAAAC,EAAA,+EAE+BC,IAAMC,KAAKV,+CAAiD,CAACoQ,QAASD,EAAQC,QAASC,QAASF,EAAQE,UAAU1P,MAAK,SAAAC,GAC1I,OAAOA,EAAIC,QAHvB,cAEcC,EAFd,yBAMeA,GANf,yDAQeP,EAASQ,gBAAgB,CAAEC,MAAO,KAAMC,WARvD,yDAFyC,yDAchCqP,GAAajQ,YACtB,sBADsC,uCAEtC,WAAOkQ,EAAYhQ,GAAnB,eAAAC,EAAA,+EAE+BC,IAAMC,KAAKV,4CAA8CuQ,GAAY5P,MAAK,SAAAC,GAC7F,OAAOA,EAAIC,QAHvB,cAEcC,EAFd,yBAMeA,GANf,yDAQeP,EAASQ,gBAAgB,CAAEC,MAAO,KAAMC,WARvD,yDAFsC,yDAa7BuP,GAAgBnQ,YACzB,yBADyC,uCAEzC,WAAO6J,EAAU3J,GAAjB,eAAAC,EAAA,+EAE+BC,IAAMC,KAAKV,+CAAiDkK,GAAUvJ,MAAK,SAAAC,GAC9F,OAAOA,EAAIC,QAHvB,cAEcC,EAFd,yBAMeA,GANf,yDAQeP,EAASQ,gBAAgB,CAAEC,MAAO,KAAMC,WARvD,yDAFyC,yDAehCwP,GAAgBnP,YAAY,CACrCC,KAAM,WACNC,aAjDiB,CACjBkP,YAAa,GACbC,yBAAyB,GAgDzBhP,SAAU,CACNiP,gBAAkB,SAAC/O,EAAOa,GACU,IAA7Bb,EAAM6O,YAAYxN,OACjBrB,EAAM6O,YAAc,GAEpB7O,EAAM6O,YAAYzD,OAAOvK,EAAOC,QAAS,IAGjDkO,6BAA+B,SAAChP,EAAOa,GACpCb,EAAM8O,yBAA0B,IAGvCnO,eAAa,mBACR0N,GAAczN,WAAY,SAACZ,EAAOa,GACT,OAAnBA,EAAOC,WAEQ,IADAd,EAAM6O,YAAY5D,WAAU,SAAAgE,GAAC,OAAIA,EAAE5G,SAASvF,MAAQjC,EAAOC,QAAQuH,SAASvF,SAEtF9C,EAAM6O,YAAY9L,KAAKlC,EAAOC,SAC9Bd,EAAM8O,yBAA0B,OANnC,cAURH,GAAc/N,WAAY,SAACZ,EAAOa,GAC/B,IAAMmK,EAAQhL,EAAM6O,YAAY5D,WAAU,SAAAgE,GAAC,OAAIA,EAAE5G,SAASvF,MAAQjC,EAAOC,QAAQgC,QACnE,IAAXkI,IACChL,EAAM6O,YAAY7D,GAAO3C,SAAWxH,EAAOC,SAE/Cd,EAAM8O,yBAA0B,KAf3B,KAoBV,GAAwDF,GAAcpN,QAA/DuN,GAAP,GAAOA,gBAAiBC,GAAxB,GAAwBA,6BAElBE,GAAoB,SAAAlP,GAAK,OAAIA,EAAMqI,SAASwG,aAC5CM,GAAgC,SAAAnP,GAAK,OAAIA,EAAMqI,SAASyG,yBAGtDF,MAAf,QClFaQ,GAAa,WAEtB,IAAM9M,EAAWC,cAEXuE,EAAUtE,YAAY0E,IACtBzI,EAAO+D,YAAYf,GAQzB,OANAgB,qBAAU,WACO,OAAThE,GACA6D,EAASmF,GAAW,CAACf,SAAUjI,EAAKqE,SAEzC,IAGC,sBAAKG,UAAW,aAAhB,UACI,mBAAGA,UAAW,oBAAd,sBAIuB,IAAnB6D,EAAQzF,OACJyF,EAAQqC,KAAI,SAAAkG,GAAM,OACd,sBAAgCpM,UAAW,qBACtCkB,QAAS,WAEL7B,EAAS+L,GACL,CACIE,QAAS9P,EAAKqE,IACd0L,QAASa,EAAOvM,QANjC,UAUI,cAAC,KAAD,CAAQI,IAAKjF,EAASoR,EAAOvJ,aAAc3C,IAAKkM,EAAOtN,SAAS,GAAG8D,cAC3D5C,UAAW,+BAEnB,uBAAMA,UAAW,2BAAjB,UAA8CoM,EAAO3P,KAArD,IAA4D2P,EAAO3K,eAb7D,UAAU2K,EAAOvM,QAiB/B,qBAAKG,UAAW,wBAAhB,gC,8ECpCPqM,GAAa,SAAC,GAA+B,IAA9BD,EAA6B,EAA7BA,OAAQhH,EAAqB,EAArBA,SAAU2C,EAAW,EAAXA,MAEpC1I,EAAWC,cAEX9D,EAAO+D,YAAYf,GACzB,EAA8BK,mBAAS,IAAvC,mBAAO1C,EAAP,KAAgBmQ,EAAhB,KACA,EAA8BzN,oBAAS,GAAvC,mBAAO0N,EAAP,KAAgBC,EAAhB,KAEA,OAEI,sBAAgDxM,UAAW,uBAA3D,UACI,sBAAKA,UAAW,oCAAqCkB,QAAS,WAC1D9D,QAAQC,IAAI,UAERmP,GADDD,IAFP,UAQI,cAAC,KAAD,CAAQtM,IAAKjF,EAASoR,EAAOvJ,aAAc3C,IAAKkM,EAAO3P,KAAK,GAAGmG,cACvD5C,UAAW,8CAElBoM,EAAO3K,UAXZ,IAWwB2K,EAAO3P,KAC3B,cAAC,KAAD,CAAYuD,UAAW,0CACXiB,MAAM,UACNC,QAAS,WACL7B,EAASyM,GAAgB/D,KAHzC,SAMI,cAAC,KAAD,SAIHwE,EAqBG,GApBA,qBAAKvM,UAAW,6BAAhB,SAEqB,OAAboF,GAAyC,IAApBA,EAAShH,OAC1BgH,EAASA,SAASc,KAAI,SAAAuG,GAAG,OACrBA,EAAInQ,SAAWd,EAAKqE,IAChB,qBACKG,UAAW,oEADhB,SAEKyM,EAAItQ,SAFC,OAASsQ,EAAI5M,KAKvB,qBACKG,UAAW,wEADhB,SAEKyM,EAAItQ,SAFC,OAASsQ,EAAI5M,QAM/B,KAOf0M,EAgCG,GA/BA,sBAAMvM,UAAW,6BAAjB,SACI,eAAC,KAAD,CAAaA,UAAW,sCAAxB,UACI,uBAAOA,UAAW,6CAA8CiG,YAAY,UACrE1F,MAAOpE,EACPqE,SAAU,SAAAC,GAAC,OAAI6L,EAAW7L,EAAEC,OAAOH,QACnCK,KAAM,OACN8L,WAAS,IAEhB,cAAC,KAAD,CAAY9L,KAAM,SACNM,QAAS,SAACT,GACNA,EAAEU,iBACF,IAAMsK,EAAa,CACfkB,WAAavH,EAASvF,IACtB1D,QAAU,CACNA,QAASA,EACToN,UAAWC,KAAKC,MAChBnN,OAAQd,EAAKqE,IACbqI,MAAO,KAGf7I,EAASmM,GAAWC,IACpBa,EAAW,KAEfrL,MAAO,UACPN,UAAWxE,EACX6D,UAAW,2CAjBvB,SAkBI,cAAC,KAAD,aA1Ed,cAAcoM,EAAO9J,GAAG,IAAI9G,EAAKqE,MCTtC+M,GAAW,WAEpB,IAAMvN,EAAWC,cACXsM,EAAcrM,YAAY0M,IAC1BJ,EAA0BtM,YAAY2M,IAE5C,EAAkDrN,oBAAS,GAA3D,mBAAOgO,EAAP,KAA0BC,EAA1B,KAEMtR,EAAO+D,YAAYf,GAoCzB,OAlCAgB,qBAAU,WACN,IAAMqG,EAAU1K,EAAO2K,UAAU,YACjCD,EAAQE,KAAK,YAAY,SAAShK,GAC9BqB,QAAQC,IAAI,qBACZyP,GAAqB,MAEzBjH,EAAQE,KAAK,WAAW,SAAShK,GAC7BqB,QAAQC,IAAI,mBACZyP,GAAqB,QAE1B,IAEHtN,qBAAU,WACNpC,QAAQC,IAAIuO,GACZA,EAAYmB,SAAQ,SAACf,EAAEgB,GACnB,IAAM3B,EAAU,CACZC,QAAU9P,EAAKqE,IACf0L,QAAUS,EAAEI,OAAO9J,IAEvBjD,EAASqM,GAAcL,OAE3ByB,GAAqB,KACtB,CAACD,IAEJrN,qBAAU,WACN,IAAMyN,EAAexN,SAASyN,iBAAiB,+BAC3B,OAAjBD,GACCA,EAAaF,SAAQ,SAAAI,GACjBA,EAASC,UAAYD,EAASE,gBAGtChO,EAAS0M,QACV,CAACF,IAGA,qBAAK7L,UAAW,WAAhB,SAE+B,IAAvB4L,EAAYxN,OACRwN,EAAY1F,KAAI,SAAC8F,EAAGgB,GAAJ,OACZ,cAAC,GAAD,CAAYZ,OAAQJ,EAAEI,OAAQhH,SAAU4G,EAAE5G,SAAU2C,MAAOiF,OAG/D,MCtDPM,GAAO,WAEhB,IAAM9R,EAAO+D,YAAYf,GACnBW,EAAUC,cAQhB,OANAI,qBAAU,WACM,OAAThE,GAAiC,IAAhBA,EAAK4C,QACrBe,EAAQW,KAAK,YAEnB,IAGEtE,EAEQ,sBAAKwE,UAAW,OAAhB,UACI,cAAC,GAAD,IACA,cAAC,GAAD,OAGJ,ICmBDuN,OAxCf,WACE,OACE,cAAC,IAAD,UACI,qBAAKvN,UAAW,MAAhB,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOwN,OAAK,EAAC3C,KAAM,SAAUxI,UAAWzD,IACxC,cAAC,IAAD,CAAO4O,OAAK,EAAC3C,KAAM,UAAWxI,UAAWd,IAEzC,cAAC,IAAD,CAAOiM,OAAK,EACL3C,KAAM,QACN4C,OAAQ,kBACJ,eAAC,IAAMC,SAAP,WACI,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,UAIf,cAAC,IAAD,CAAUC,KAAM,KAAMC,GAAG,SAASC,OAAQ,cCrB7CC,GAAQC,YAAe,CAClClG,QAAS,CACPJ,MAAOuG,GACPvP,MAAOwP,EACP/J,OAAQgK,GACRxJ,WAAYyJ,GACZ/I,SAAUgJ,MCDMC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASjB,OACP,cAAC,IAAMkB,WAAP,UACE,cAAC,IAAD,CAAUb,MAAOA,GAAjB,SACE,cAAC,GAAD,QAGJrO,SAASwK,eAAe,SDqHpB,kBAAmB2E,WACrBA,UAAUC,cAAcC,MAAMjT,MAAK,SAACkT,GAClCA,EAAaC,iB,iBE3FnBC,EAAOC,QAAU,CAAC/E,8BA1CqB,SAACgF,EAAIC,GACxC,IAAIC,EAAOD,EAAKD,EAQhB,OADAE,GANe,MAOJ,GACA,SAAWC,KAAKC,MAAMF,GAAQ,YAEzCA,GATY,KAUD,GACA,SAAWC,KAAKC,MAAMF,GAAQ,YAEzCA,GAZa,KAaF,GACA,SAAWC,KAAKC,MAAMF,GAAQ,UAEzCA,GAfY,KAgBD,GACA,SAAWC,KAAKC,MAAMF,GAAQ,SAEzCA,GAlBc,KAmBH,GACA,SAAWC,KAAKC,MAAMF,GAAQ,WAEzCA,GArBa,GAsBN,SAAWC,KAAKC,MAAMF,GAAQ,WAaQG,iBAVxB,WACrB,IAAIC,EAAK,WACL,OAAOH,KAAKI,MAA4B,OAArB,EAAIJ,KAAKK,WACvBC,SAAS,IACTC,UAAU,IAGnB,OAAOJ,IAAOA,IAAO,IAAMA,IAAO,IAAMA,IAAO,IAAMA,IAAO,IAAMA,IAAOA,IAAOA,Q","file":"static/js/main.8fdd6886.chunk.js","sourcesContent":["import Pusher from \"pusher-js\";\r\n\r\n// export const ServerInstanceAddress = 'https://facebook-clone-mern-hamza.herokuapp.com'\r\nexport const ServerInstanceAddress = 'http://localhost:9000'\r\n\r\n\r\nexport const getImage = (filename) => {\r\n    return ServerInstanceAddress + '/media/retrieve/?filename=' + filename\r\n}\r\n\r\nexport const pusher = new Pusher('67843c3bf2c33b4e1d28', {\r\n    cluster: 'eu'\r\n});\r\n","import {createAsyncThunk, createSlice} from '@reduxjs/toolkit'\r\nimport {ServerInstanceAddress} from \"../../ServerInstance\";\r\nimport axios from \"axios\";\r\n\r\nconst initialState = {\r\n    user: null,\r\n    err: null,\r\n    statusLogin: null\r\n}\r\n\r\nexport const uploadUser = createAsyncThunk(\r\n    'upload/user',\r\n    async (user, thunkAPI) => {\r\n        try {\r\n            const response = await axios.post(ServerInstanceAddress+\"/user/upload\", user).then(res => {\r\n                return res.data\r\n            })\r\n            return response\r\n        } catch (error) {\r\n            return thunkAPI.rejectWithValue({ error: error.message });\r\n        }\r\n    })\r\n\r\nexport const retrieveUser = createAsyncThunk(\r\n    '/retrieve/user',\r\n    async (user, thunkAPI) => {\r\n        try {\r\n            const response = await axios.post(ServerInstanceAddress+\"/user/retrieve\", user).then((res)=>{\r\n                return res.data\r\n            })\r\n            return response\r\n        } catch (error) {\r\n            // console.log(error.response.status)\r\n            return thunkAPI.rejectWithValue({ error: error.message });\r\n        }\r\n    })\r\n\r\nexport const synchUser = createAsyncThunk(\r\n    'user/synchronisation',\r\n    async (idUser, thunkAPI) => {\r\n        try {\r\n            const response = await axios.post(ServerInstanceAddress+\"/user/synchronisation\", idUser).then(res => {\r\n                return res.data\r\n            })\r\n            return response\r\n        } catch (error) {\r\n            return thunkAPI.rejectWithValue({ error: error.message });\r\n        }\r\n    })\r\n\r\n\r\n\r\n\r\nexport const loginSlice = createSlice({\r\n    name: 'login',\r\n    initialState,\r\n    reducers: {\r\n        resetError: (state) => {\r\n            state.err = null\r\n        },\r\n        retrieveLocalUser: (state) => {\r\n            const localUser = localStorage.getItem('user')\r\n            console.log(localUser)\r\n            if(localUser){\r\n                console.log('user found')\r\n                state.user = JSON.parse(localUser)\r\n            }\r\n            else{\r\n                console.log('user not found')\r\n            }\r\n        },\r\n        logOut: (state) => {\r\n            state.user = null\r\n            localStorage.removeItem('user')\r\n        }\r\n    },\r\n    extraReducers: {\r\n        // UPLOAD USER\r\n        [uploadUser.fulfilled]: (state, action) => {\r\n            state.user = action.payload\r\n        },\r\n        // RETRIEVE USER\r\n        [retrieveUser.fulfilled]: (state, action) => {\r\n            state.statusLogin = null\r\n            localStorage.setItem('user', JSON.stringify(action.payload))\r\n            state.user = action.payload\r\n        },\r\n        [retrieveUser.rejected]: (state, action) => {\r\n            state.statusLogin = null\r\n            const messageError = action.payload.error.split(' ')\r\n            const codeError = messageError[messageError.length - 1]\r\n            state.err = parseInt(codeError)\r\n        },\r\n        [retrieveUser.pending]: (state) => {\r\n            state.statusLogin = 'wait'\r\n        },\r\n        // SYNCHRONISATION\r\n        [synchUser.fulfilled]: (state, action) => {\r\n            localStorage.setItem('user', JSON.stringify(action.payload))\r\n            state.user = action.payload\r\n        },\r\n\r\n    }\r\n})\r\n\r\nexport const {resetError, retrieveLocalUser, logOut} = loginSlice.actions\r\n\r\nexport const selectUser = (state) => state.login.user\r\nexport const selectErr = (state) => state.login.err\r\nexport const selectStatusLogin = (state) => state.login.statusLogin\r\n\r\nexport default loginSlice.reducer","import React, {useEffect, useState} from \"react\"\r\nimport Button from \"@material-ui/core/Button\";\r\nimport './Login.css'\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport {useHistory} from \"react-router-dom\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    resetError,\r\n    retrieveLocalUser,\r\n    retrieveUser,\r\n    selectErr,\r\n    selectStatusLogin,\r\n    selectUser,\r\n    synchUser\r\n} from \"./loginSlice\";\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport AlertTitle from \"@material-ui/lab/AlertTitle\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nexport const Login = () => {\r\n\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [error, setError] = useState('')\r\n\r\n    const history = useHistory()\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const user = useSelector(selectUser)\r\n    const err = useSelector(selectErr)\r\n    const statusLogin = useSelector(selectStatusLogin)\r\n\r\n    useEffect(()=>{\r\n        document.querySelector('.login__form__error').style.display = 'none'\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        if(user !== null){\r\n            dispatch(synchUser({idUser: user._id}))\r\n            history.push(\"/home\")\r\n        }\r\n        else{\r\n            dispatch(retrieveLocalUser())\r\n        }\r\n    }, [user])\r\n\r\n    useEffect(()=>{\r\n        if(err !== null){\r\n            document.querySelector('.login__form__error').style.display = 'flex'\r\n            switch (err) {\r\n                case 500:\r\n                    setError('Internal Server Error')\r\n                    break\r\n                case 404:\r\n                    setError('Username not found')\r\n                    break\r\n                default:\r\n                    setError('Incorrect password')\r\n            }\r\n            setTimeout(()=>{\r\n                document.querySelector('.login__form__error').style.display = 'none'\r\n                setError('')\r\n                dispatch(resetError())\r\n            }, 5000)\r\n        }\r\n    }, [err])\r\n\r\n    useEffect(()=>{\r\n        if(statusLogin !== null){\r\n            // waiting\r\n            document.querySelector('.login__form__wait').style.display = 'flex'\r\n            // document.querySelector('.login__form__input').style.pointerEvents = 'none'\r\n        }\r\n        else{\r\n            // not waiting : success or fail\r\n            document.querySelector('.login__form__wait').style.display = 'none'\r\n            // document.querySelector('.login__form__input').style.pointerEvents = 'auto'\r\n            setUsername('')\r\n            setPassword('')\r\n        }\r\n    }, [statusLogin])\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault()\r\n        console.log('click login')\r\n        if(username && password){\r\n            const userLogin = {\r\n                username: username.toLocaleLowerCase(),\r\n                password\r\n            }\r\n            dispatch(retrieveUser(userLogin))\r\n\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className={'login'}>\r\n            <img src={'fb_img.png'} alt={''} className={'login__img'} />\r\n            <form className={'login__form'}>\r\n                <FormControl className={'login__form__formControl'}>\r\n                    <TextField label=\"Username\" variant=\"outlined\"\r\n                               className={'login__form__username login__form__input'}\r\n                               value={username}\r\n                               onChange={e=>setUsername(e.target.value)}\r\n                               disabled={statusLogin !== null}\r\n                    />\r\n                    <TextField label=\"Password\" variant=\"outlined\"\r\n                               type=\"Password\"\r\n                               className={'login__form__password login__form__input'}\r\n                               value={password}\r\n                               onChange={e=>setPassword(e.target.value)}\r\n                               disabled={statusLogin !== null}\r\n                    />\r\n                    <Alert severity=\"error\" className={'login__form__error'}>\r\n                        <AlertTitle>Error</AlertTitle>\r\n                        {error}\r\n                    </Alert>\r\n                    <Button variant=\"contained\" color=\"primary\"\r\n                            className={'login__form__btn'}\r\n                            onClick={handleLogin}\r\n                            disabled={!username || !password || statusLogin !== null}\r\n                            type={'submit'}\r\n                    >\r\n                        Login\r\n                    </Button>\r\n                    <CircularProgress className={'login__form__wait'} style={{display: 'none'}}/>\r\n                </FormControl>\r\n            </form>\r\n            <Button className={'login__signUp'}\r\n                    onClick={()=> {\r\n                        history.push('/signUp')\r\n                    }}\r\n            >Sign Up</Button>\r\n        </div>\r\n    )\r\n}","import React, {useEffect, useState} from \"react\"\r\nimport './SignUp.css'\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {useHistory} from \"react-router-dom\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {selectUser, uploadUser} from \"../loginSlice\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport axios from \"axios\"\r\nimport {ServerInstanceAddress} from '../../../ServerInstance'\r\n\r\nexport const SignUp = () => {\r\n\r\n    const [name, setName] = useState('')\r\n    const [firstName, setFirstName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [phone, setPhone] = useState('')\r\n    const [image, setImage] = useState(undefined)\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [passwordConfirm, setPasswordConfirm] = useState('')\r\n\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n\r\n    const user = useSelector(selectUser)\r\n\r\n    useEffect(()=>{\r\n        if(user !== null){\r\n            history.push('/home')\r\n        }\r\n    }, [user])\r\n\r\n    const handleSignUp = (e) => {\r\n        e.preventDefault()\r\n        if(name && firstName && username && password && passwordConfirm){\r\n            if(password === passwordConfirm){\r\n                if(image){\r\n                    // console.log(image)\r\n                    const formData = new FormData()\r\n                    formData.append('file', image)\r\n                    axios.post(ServerInstanceAddress+'/media/upload', formData).then((res)=>{\r\n                        const newUser = {\r\n                            name: name.toUpperCase(),\r\n                            firstName,\r\n                            email: email ? email : '',\r\n                            phone: phone ? phone : '',\r\n                            imgUserName: res.data ? res.data : '',\r\n                            username: username.toLowerCase(),\r\n                            password\r\n                        }\r\n                        console.log(newUser)\r\n                        dispatch(uploadUser(newUser))\r\n                        setName('')\r\n                        setFirstName('')\r\n                        setEmail('')\r\n                        setPhone('')\r\n                        setUsername('')\r\n                        setPassword('')\r\n                        setPasswordConfirm('')\r\n                    })\r\n                }\r\n            }\r\n            else{\r\n                alert('Password is not the same !')\r\n            }\r\n        }\r\n        else{\r\n            alert('Something wrong !')\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className={'signUp'}>\r\n            <img src={'fb_img.png'} alt={''} className={'signUp__img'} />\r\n            <form className={'signUp__form'}>\r\n                <TextField label=\"Name\" variant=\"outlined\"\r\n                           className={'signUp__form__name signUp__form__input'}\r\n                           value={name}\r\n                           onChange={e=>setName(e.target.value)}\r\n                />\r\n                <TextField label=\"First Name\" variant=\"outlined\"\r\n                           className={'signUp__form__firstName signUp__form__input'}\r\n                           value={firstName}\r\n                           onChange={e=>setFirstName(e.target.value)}\r\n                />\r\n                <TextField label=\"Email\" variant=\"outlined\"\r\n                           className={'signUp__form__email signUp__form__input'}\r\n                           value={email}\r\n                           onChange={e=>setEmail(e.target.value)}\r\n                />\r\n                <TextField label=\"Phone Number\" variant=\"outlined\"\r\n                           className={'signUp__form__phone signUp__form__input'}\r\n                           value={phone}\r\n                           onChange={e=>setPhone(e.target.value)}\r\n                />\r\n                <label className={'signUp__form__label signUp__form__input'} htmlFor={'video'}>\r\n                    <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                        <ImageIcon className={'signUp__form__label__icon'} />\r\n                        Upload Photo\r\n                    </Button>\r\n                    <input id={'video'} style={{display: 'none'}} type={'file'}\r\n                           onChange={e => {\r\n                               if(e.target.files[0]){\r\n                                   setImage(e.target.files[0])\r\n                               }}}\r\n                    />\r\n                </label>\r\n                <TextField label=\"Username\" variant=\"outlined\"\r\n                           className={'signUp__form__username signUp__form__input'}\r\n                           value={username}\r\n                           onChange={e=>setUsername(e.target.value)}\r\n                />\r\n                <TextField label=\"Password\" variant=\"outlined\"\r\n                           className={'signUp__form__password signUp__form__input'}\r\n                           type=\"Password\"\r\n                           value={password}\r\n                           onChange={e=>setPassword(e.target.value)}\r\n                />\r\n                <TextField label=\"Confirm Password\" variant=\"outlined\"\r\n                           className={'signUp__form__passwordConfirm signUp__form__input'}\r\n                           type=\"Password\"\r\n                           value={passwordConfirm}\r\n                           onChange={e=>setPasswordConfirm(e.target.value)}\r\n                />\r\n                <Button variant=\"contained\" color=\"primary\"\r\n                        className={'signUp__form__btn'}\r\n                        onClick={handleSignUp}\r\n                        disabled={!(name && firstName && username && password && passwordConfirm)}\r\n                >\r\n                    Sign Up\r\n                </Button>\r\n            </form>\r\n            <Button className={'signUp__login'}\r\n                    onClick={()=>{\r\n                        history.push('/login')\r\n                    }}\r\n            >Login</Button>\r\n        </div>\r\n    )\r\n}","import {createAsyncThunk, createSlice} from '@reduxjs/toolkit'\r\nimport {ServerInstanceAddress} from \"../../../ServerInstance\";\r\nimport axios from \"axios\";\r\n\r\nconst initialState = {\r\n    search:{\r\n        friends: [],\r\n        statusSearch: false\r\n    },\r\n    notification:{\r\n        requesters: []\r\n    },\r\n}\r\n\r\nexport const searchFriends = createAsyncThunk(\r\n    'user/search',\r\n    async (search, thunkAPI) => {\r\n        try {\r\n            const response = await axios.post(ServerInstanceAddress+\"/user/search\", search).then(res => {\r\n                return res.data\r\n            })\r\n            return response\r\n        } catch (error) {\r\n            return thunkAPI.rejectWithValue({ error: error.message });\r\n        }\r\n    })\r\n\r\nexport const inviteFriend = createAsyncThunk(\r\n    'user/invite',\r\n    async (invitation, thunkAPI) => {\r\n        try {\r\n            const response = await axios.post(ServerInstanceAddress+\"/user/invite\", invitation).then(res => {\r\n                return res.data\r\n            })\r\n            return response\r\n        } catch (error) {\r\n            return thunkAPI.rejectWithValue({ error: error.message });\r\n        }\r\n    })\r\n\r\nexport const disinviteFriend = createAsyncThunk(\r\n    'user/disinvite',\r\n    async (disinvitation, thunkAPI) => {\r\n        try {\r\n            const response = await axios.post(ServerInstanceAddress+\"/user/disinvite\", disinvitation).then(res => {\r\n                return res.data\r\n            })\r\n            return response\r\n        } catch (error) {\r\n            return thunkAPI.rejectWithValue({ error: error.message });\r\n        }\r\n    })\r\n\r\nexport const getUser = createAsyncThunk(\r\n    'user/get',\r\n    async (idUser, thunkAPI) => {\r\n        try {\r\n            const response = await axios.get(ServerInstanceAddress+\"/user/get/?idUser=\"+idUser).then(res => {\r\n                return res.data\r\n            })\r\n            return response\r\n        } catch (error) {\r\n            return thunkAPI.rejectWithValue({ error: error.message });\r\n        }\r\n    })\r\n\r\nexport const getRequesters = createAsyncThunk(\r\n    'user/getRequesters',\r\n    async (myIdUser, thunkAPI) => {\r\n        try {\r\n            const response = await axios.post(ServerInstanceAddress+\"/user/requesters\", myIdUser).then(res => {\r\n                return res.data\r\n            })\r\n            return response\r\n        } catch (error) {\r\n            return thunkAPI.rejectWithValue({ error: error.message });\r\n        }\r\n    })\r\n\r\nexport const refuseFriend = createAsyncThunk(\r\n    'user/refuseFriend',\r\n    async (idUserRequest, thunkAPI) => {\r\n        try {\r\n            await axios.post(ServerInstanceAddress+\"/user/refuseFriend\", idUserRequest)\r\n        } catch (error) {\r\n            return thunkAPI.rejectWithValue({ error: error.message });\r\n        }\r\n    })\r\n\r\n\r\nexport const headerSlice = createSlice({\r\n    name: 'header',\r\n    initialState,\r\n    reducers: {},\r\n    extraReducers: {\r\n        // UPLOAD USER\r\n        [searchFriends.pending]: (state, action) => {\r\n            state.search.statusSearch = true\r\n            state.search.friends = []\r\n        },\r\n        [searchFriends.fulfilled]: (state, action) => {\r\n            // state.search.friends = []\r\n            state.search.statusSearch = false\r\n            state.search.friends = action.payload\r\n        },\r\n        // INVITE FRIEND\r\n        [inviteFriend.fulfilled]: (state, action) => {\r\n\r\n        },\r\n        // DISINVITE FRIEND\r\n        [disinviteFriend.fulfilled]: (state, action) => {\r\n\r\n        },\r\n        // GET USER\r\n        [getUser.fulfilled]: (state, action) => {\r\n            state.notification.requesters.push(action.payload)\r\n        },\r\n        [getRequesters.fulfilled]: (state, action)=>{\r\n            state.notification.requesters = []\r\n            state.notification.requesters = action.payload\r\n        }\r\n\r\n    }\r\n})\r\n\r\n// export const {} = headerSlice.actions\r\n\r\nexport const selectFriends = (state) => state.header.search.friends\r\nexport const selectStatusSearch = (state) => state.header.search.statusSearch\r\nexport const selectRequesters = (state) => state.header.notification.requesters\r\n\r\nexport default headerSlice.reducer","import {createAsyncThunk, createSlice} from '@reduxjs/toolkit'\r\nimport {ServerInstanceAddress} from \"../../../ServerInstance\";\r\nimport axios from \"axios\";\r\n\r\nconst initialState = {\r\n    friends: []\r\n}\r\n\r\nexport const addFriend = createAsyncThunk(\r\n    'user/addFriend',\r\n    async (idUserRequest, thunkAPI) => {\r\n        try {\r\n            await axios.post(ServerInstanceAddress+\"/user/addFriend\", idUserRequest)\r\n        } catch (error) {\r\n            return thunkAPI.rejectWithValue({ error: error.message });\r\n        }\r\n    })\r\n\r\nexport const removeFriend = createAsyncThunk(\r\n    'user/removeFriend',\r\n    async (idUserFriend, thunkAPI) => {\r\n        try {\r\n            await axios.post(ServerInstanceAddress+\"/user/removeFriend\", idUserFriend)\r\n        } catch (error) {\r\n            return thunkAPI.rejectWithValue({ error: error.message });\r\n        }\r\n    })\r\n\r\nexport const getFriends = createAsyncThunk(\r\n    'user/getFriends',\r\n    async (idUser, thunkAPI) => {\r\n        try {\r\n            const response = await axios.post(ServerInstanceAddress+\"/user/getFriends\", idUser).then(res => {\r\n                return res.data\r\n            })\r\n            return response\r\n        } catch (error) {\r\n            return thunkAPI.rejectWithValue({ error: error.message });\r\n        }\r\n    })\r\n\r\nexport const friendsBoxSlice = createSlice({\r\n    name: 'friendsBox',\r\n    initialState,\r\n    reducers: {},\r\n    extraReducers: {\r\n        // GET FRIENDS\r\n        [getFriends.fulfilled]: (state, action) => {\r\n            state.friends = action.payload\r\n        },\r\n    }\r\n})\r\n\r\n// export const {} = friendsBoxSlice.actions\r\n\r\nexport const selectFriends = state => state.friendsBox.friends\r\n\r\n\r\nexport default friendsBoxSlice.reducer","import React, {useEffect, useState} from \"react\";\r\nimport './Header.css'\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport OndemandVideoIcon from '@material-ui/icons/OndemandVideo';\r\nimport StorefrontIcon from '@material-ui/icons/Storefront';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {logOut, selectUser, synchUser} from \"../../login/loginSlice\";\r\nimport {getImage} from \"../../../ServerInstance\";\r\nimport {useHistory} from \"react-router-dom\"\r\nimport {\r\n    cleanRequesters,\r\n    disinviteFriend,\r\n    getUser,\r\n    inviteFriend,\r\n    searchFriends,\r\n    selectFriends, selectRequesters,\r\n    selectStatusSearch, getRequesters, refuseFriend\r\n} from \"./headerSlice\";\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport PersonAddDisabledOutlinedIcon from '@mui/icons-material/PersonAddDisabledOutlined';\r\nimport Button from \"@mui/material/Button\";\r\nimport {pusher} from \"../../../ServerInstance\";\r\nimport {addFriend, getFriends, removeFriend} from \"../friendsBox/friendsBoxSlice\";\r\n\r\nexport const Header = () => {\r\n\r\n    const user = useSelector(selectUser)\r\n\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    const [openPlus, setOpenPlus] = useState(false)\r\n    const [search, setSearch] = useState('')\r\n    const [focus, setFocus] = useState(false)\r\n    const [openNotification, setOpenNotification] = useState(false)\r\n\r\n    const friends = useSelector(selectFriends)\r\n    const statusSearch = useSelector(selectStatusSearch)\r\n    const requesters = useSelector(selectRequesters)\r\n\r\n    // SEARCH -----------------------------------------------------------------------------------\r\n    useEffect(()=>{\r\n        const home = document.querySelector('.home')\r\n        const friends = document.querySelector('.friendsBox')\r\n        const messages = document.querySelector('.messages')\r\n        if(home !== null) {\r\n            if (focus) {\r\n                home.style.filter = 'brightness(80%)'\r\n                friends.style.filter = 'brightness(80%)'\r\n                messages.style.filter = 'brightness(80%)'\r\n            } else {\r\n                home.style.filter = 'brightness(100%)'\r\n                friends.style.filter = 'brightness(100%)'\r\n                messages.style.filter = 'brightness(100%)'\r\n            }\r\n        }\r\n\r\n    }, [focus])\r\n\r\n    useEffect(()=>{\r\n        if(search !== ''){\r\n            dispatch(searchFriends({search: search, idUser: user._id}))\r\n        }\r\n    }, [search])\r\n\r\n    // PLUS -----------------------------------------------------------------------------------\r\n    const handleOpenPlus = (e) => {\r\n        if(!openPlus){\r\n            setOpenPlus(true)\r\n            document.querySelector('.header__account__btnPlus__icon').style.color = 'blue'\r\n        }\r\n        else{\r\n            setOpenPlus(false)\r\n            document.querySelector('.header__account__btnPlus__icon').style.color = '#6E6F70'\r\n        }\r\n    }\r\n\r\n    // NOTIFICATION -----------------------------------------------------------------------------------\r\n    const handleOpenNotification = () => {\r\n        if(!openNotification){\r\n            setOpenNotification(true)\r\n            document.querySelector('.header__account__btnNotification__icon').style.color = 'blue'\r\n        }else{\r\n            setOpenNotification(false)\r\n            document.querySelector('.header__account__btnNotification__icon').style.color = '#6E6F70'\r\n        }\r\n    }\r\n\r\n    // CLICK EVENT -----------------------------------------------------------------------------------\r\n    document.onclick = (e) => {\r\n        // console.log(e.target)\r\n        // SEARCH\r\n        const inputSeach = document.querySelector('.header__search__barSearch__input')\r\n        if(inputSeach === document.activeElement){\r\n            setFocus(true)\r\n        }\r\n        if(focus && !inputSeach.contains(e.target)){\r\n            const searchBox = document.querySelector('.header__searchBox')\r\n            if(searchBox !== null){\r\n                if(!searchBox.contains(e.target)){\r\n                    setFocus(false)\r\n                }\r\n            }else{\r\n                setFocus(false)\r\n            }\r\n        }\r\n        // PLUS\r\n        if(openPlus){\r\n            const btnPlus = document.querySelector('.header__account__btnPlus')\r\n            if(btnPlus !== null){\r\n                if(!btnPlus.contains(e.target)){\r\n                    const headerPlus = document.querySelector('.header__plus')\r\n                    if (!headerPlus.contains(e.target)) {\r\n                        setOpenPlus(false)\r\n                        document.querySelector('.header__account__btnPlus__icon').style.color = '#6E6F70'\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if(openNotification){\r\n            const btnNotification = document.querySelector('.header__account__btnNotification')\r\n            if(btnNotification !== null){\r\n                if(!btnNotification.contains(e.target)){\r\n                    const headerNotification = document.querySelector('.header__notification')\r\n                    if(!headerNotification.contains(e.target)){\r\n                        setOpenNotification(false)\r\n                        document.querySelector('.header__account__btnNotification__icon').style.color = '#6E6F70'\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // LOG OUT -----------------------------------------------------------------------------------\r\n    const handleLogOut = () => {\r\n        dispatch(logOut())\r\n        history.push('/login')\r\n    }\r\n\r\n    // LOCATION and PUSHER -----------------------------------------------------------------------------------\r\n    useEffect(()=>{\r\n        if(user === null || user.length === 0){\r\n            history.push('/login')\r\n        }\r\n        if(user !== null){\r\n            dispatch(getRequesters({myIdUser: user._id}))\r\n        }\r\n        const channel = pusher.subscribe('users');\r\n        channel.bind('inserted', function(data) {\r\n            console.log('inserted user Client')\r\n            if(user !== null){\r\n                dispatch(searchFriends({search: search, idUser: user._id}))\r\n            }\r\n        })\r\n        channel.bind('updated', function(data) {\r\n            console.log('updated user Client')\r\n            if(user !== null){\r\n                dispatch(synchUser({idUser: user._id}))\r\n                dispatch(searchFriends({search: search, idUser: user._id}))\r\n                dispatch(getRequesters({myIdUser: user._id}))\r\n                dispatch(getFriends({myIdUser: user._id}))\r\n            }\r\n\r\n        })\r\n    }, [])\r\n\r\n    // RENDER -------------------------------------------------------------------------------------------------------\r\n    return (\r\n        <div className={'header'}>\r\n            <div className={'header__search'}>\r\n                <img className={'header__search__img'} src={'icons/facebook_icon.png'} alt={''} />\r\n                <div className={'header__search__barSearch'}>\r\n                    <SearchIcon className={'header__search__barSearch__icon'} fontSize=\"medium\" color=\"action\"/>\r\n                    <input className={'header__search__barSearch__input'} placeholder=\"Search Friends\"\r\n                           type={'text'}\r\n                           value={search}\r\n                           onChange={(e)=>setSearch(e.target.value)}\r\n                    />\r\n                </div>\r\n            </div>\r\n            {\r\n                focus ?\r\n                    search.length !== 0 ?\r\n                        <div className={'header__searchBox'}>\r\n                            {\r\n                                !statusSearch ?\r\n                                    friends.length !== 0 ?\r\n                                        friends.map(f => (\r\n                                            <div key={f._id} className={'header__searchBox__friend'} >\r\n                                                <div className={'header__searchBox__friend__information'}>\r\n                                                    <Avatar src={getImage(f.imgUserName)} alt={f.username.toUpperCase()}\r\n                                                            className={'header__searchBox__friend__information__avatar'}\r\n                                                    />\r\n                                                    <span>{f.firstName} {f.name}</span>\r\n                                                </div>\r\n                                                {\r\n                                                    user.idFriends.includes(String(f._id)) ?\r\n                                                        <Button variant=\"text\"\r\n                                                                className={'header__searchBox__friend__btn'}\r\n                                                                size={'small'}\r\n                                                                onClick={()=>{\r\n                                                                    // console.log('disinvite friend')\r\n                                                                    dispatch(removeFriend({idUser: user._id, idFriend: f._id}))\r\n                                                                }}\r\n                                                        >Remove as friend</Button>\r\n                                                        :\r\n                                                        user.idRequests.includes(String(f._id)) ?\r\n                                                            <div className={'header__notification__requester__btn'}>\r\n                                                                <Button\r\n                                                                    onClick={()=>{\r\n                                                                        dispatch(addFriend({idUser: user._id, idRequest: f._id}))\r\n                                                                    }}\r\n                                                                    className={'header__notification__requester__btnAccept'}\r\n                                                                    size=\"small\"\r\n                                                                    variant=\"text\">Accept</Button>\r\n                                                                <Button\r\n                                                                    onClick={()=>{\r\n                                                                        dispatch(refuseFriend({idUser: user._id, idRequest: f._id}))\r\n                                                                    }}\r\n                                                                    className={'header__notification__requester__btnRefuse'}\r\n                                                                    size=\"small\"\r\n                                                                    color=\"secondary\"\r\n                                                                    variant=\"text\">Refuse</Button>\r\n                                                            </div>\r\n                                                            :\r\n                                                            !f.idRequests.includes(String(user._id)) ?\r\n                                                                <Button variant=\"contained\"\r\n                                                                        size={'small'}\r\n                                                                        className={'header__searchBox__friend__btn'}\r\n                                                                        onClick={() => {\r\n                                                                            // console.log('invite friend')\r\n                                                                            dispatch(inviteFriend({idUser: user._id, idRequest: f._id}))\r\n                                                                        }}\r\n                                                                >Invite</Button>\r\n                                                                :\r\n                                                                <Button variant=\"outlined\"\r\n                                                                        className={'header__searchBox__friend__btn'}\r\n                                                                        size={'small'}\r\n                                                                        onClick={()=>{\r\n                                                                            // console.log('disinvite friend')\r\n                                                                            dispatch(disinviteFriend({idUser: user._id, idRequest: f._id}))\r\n                                                                        }}\r\n                                                                >Disinvite</Button>\r\n                                                }\r\n                                            </div>\r\n                                        ))\r\n                                        :\r\n                                        <div className={'header__searchBox__noresult'}>\r\n                                            <PersonAddDisabledOutlinedIcon className={'header__searchBox__noresult__icon'} />\r\n                                            <p className={'header__searchBox__noresult__text'}>No Result</p>\r\n                                        </div>\r\n\r\n                                    :\r\n                                    <CircularProgress color=\"secondary\" />\r\n                            }\r\n                        </div>\r\n                        :\r\n                        ''\r\n                    :\r\n                    ''\r\n            }\r\n            <div className={'header__nav'}>\r\n                <div className={'header__nav__btn header__nav__home selected'}>\r\n                    <HomeIcon className={'header__nav__btn__icon'} color={'primary'} fontSize={'medium'}/>\r\n                    <span></span>\r\n                </div>\r\n                <div className={'header__nav__btn header__nav__video'}>\r\n                    <OndemandVideoIcon className={'header__nav__btn__icon'} color={'primary'} fontSize={'medium'}/>\r\n                </div>\r\n                <div className={'header__nav__btn header__nav__marketplace'}>\r\n                    <StorefrontIcon className={'header__nav__btn__icon'} color={'primary'} fontSize={'medium'}/>\r\n                </div>\r\n            </div>\r\n            <div className={'header__account'}>\r\n                <div className={'header__account__user'}>\r\n                    <Avatar className={'header__account__user__avatar'} alt={''}\r\n                            src={getImage(user ? user.imgUserName : '')}\r\n                    />\r\n                    <strong className={\"header__account__user__text\"}>{user ? user.firstName : ''} {user? user.name : ''}</strong>\r\n                </div>\r\n                <IconButton className={'header__account__btn header__account__btnChat'}>\r\n                    <ChatIcon className={'header__account__btn__icon'} fontSize={'small'} color=\"action\"/>\r\n                </IconButton >\r\n                <IconButton className={'header__account__btn header__account__btnNotification'}\r\n                            onClick={handleOpenNotification}>\r\n                    <NotificationsIcon className={'header__account__btn__icon header__account__btnNotification__icon'} fontSize={'small'} color=\"action\"/>\r\n                </IconButton>\r\n                <IconButton className={'header__account__btn header__account__btnPlus'}\r\n                            onClick={handleOpenPlus}>\r\n                    <KeyboardArrowDownIcon className={'header__account__btn__icon header__account__btnPlus__icon'} fontSize={'small'} color=\"action\"/>\r\n                </IconButton>\r\n            </div>\r\n            {\r\n                openPlus ?\r\n                    <div className={'header__plus'}>\r\n                        <div className={'header__plus__btn header__plus__profile'}>\r\n                            <Avatar className={'header__plus__profile__avatar'} alt={user.username[0].toUpperCase()} src={getImage(user.imgUserName)} />\r\n                            <div className={'header__plus__profile__text'}>\r\n                                <strong>{user.firstName} {user.name}</strong>\r\n                                <p className={'header__plus__profile__text__placeholder'}>Go to the profile</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className={'header__plus__btn header__plus__settings'}>\r\n                            <SettingsIcon className={'header__plus__btn__icon'} /> Setting\r\n                        </div>\r\n                        <div className={'header__plus__btn header__plus__logout'}\r\n                             onClick={handleLogOut}\r\n                        >\r\n                            <ExitToAppIcon className={'header__plus__btn__icon'}/>\r\n                            Log Out\r\n                        </div>\r\n                    </div>\r\n                    :\r\n                    ''\r\n            }\r\n            {\r\n                openNotification ?\r\n                    <div className={'header__notification'}>\r\n                        {\r\n                            requesters.length !== 0 ?\r\n                                requesters.map(requester => (\r\n                                    <div key={'request-'+requester._id} className={'header__notification__requester'}>\r\n                                        <div className={'header__notification__requester__information'}>\r\n                                            <Avatar\r\n                                                className={'header__notification__requester__information__avatar'}\r\n                                                src={getImage(requester.imgUserName)} alt={requester.username[0].toUpperCase()} />\r\n                                            {requester.firstName} {requester.name}\r\n                                        </div>\r\n                                        <div className={'header__notification__requester__btn'}>\r\n                                            <Button\r\n                                                onClick={()=>{\r\n                                                    dispatch(addFriend({idUser: user._id, idRequest: requester._id}))\r\n                                                }}\r\n                                                className={'header__notification__requester__btnAccept'}\r\n                                                size=\"small\"\r\n                                                variant=\"text\">Accept</Button>\r\n                                            <Button\r\n                                                onClick={()=>{\r\n                                                    dispatch(refuseFriend({idUser: user._id, idRequest: requester._id}))\r\n                                                }}\r\n                                                className={'header__notification__requester__btnRefuse'}\r\n                                                size=\"small\"\r\n                                                color=\"secondary\"\r\n                                                variant=\"text\">Refuse</Button>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                ))\r\n                                :\r\n                                <div className={'header__notification__noresult'}>\r\n                                    No one invited you !\r\n                                </div>\r\n                        }\r\n                    </div>\r\n                    :\r\n                    ''\r\n            }\r\n        </div>\r\n    )\r\n}","import {createAsyncThunk, createSlice} from '@reduxjs/toolkit'\r\nimport axios from \"axios\";\r\nimport {ServerInstanceAddress} from \"../../../../ServerInstance\";\r\n\r\nconst initialState = {\r\n    posts: [],\r\n    statusLikePost: false,\r\n    statusLikeComment: false\r\n}\r\n\r\nexport const getPosts = createAsyncThunk(\r\n    'post/getPosts',\r\n    async (friends, thunkAPI) => {\r\n        try {\r\n            const response = await axios.post(ServerInstanceAddress+\"/post/getPosts\",friends).then(res => {\r\n                return res.data\r\n            })\r\n            return response\r\n        } catch (error) {\r\n            return thunkAPI.rejectWithValue({ error: error.message });\r\n        }\r\n    })\r\n\r\nexport const uploadPost = createAsyncThunk(\r\n    'posts/upload',\r\n    async (newPost, thunkAPI) => {\r\n        try {\r\n            await axios.post(ServerInstanceAddress+\"/post/upload\", newPost)\r\n        } catch (error) {\r\n            return thunkAPI.rejectWithValue({ error: error.message });\r\n        }\r\n    })\r\n\r\nexport const addCommentToPostById = createAsyncThunk(\r\n    'posts/comment/upload',\r\n    async (newComment, thunkAPI) => {\r\n        try {\r\n            await axios.post(ServerInstanceAddress+\"/post/comment/upload\", newComment)\r\n        } catch (error) {\r\n            return thunkAPI.rejectWithValue({ error: error.message });\r\n        }\r\n    })\r\n\r\nexport const likePostById = createAsyncThunk(\r\n    'post/like',\r\n    async (like, thunkAPI) => {\r\n        try {\r\n            await axios.post(ServerInstanceAddress+\"/post/like\", like)\r\n        } catch (error) {\r\n            return thunkAPI.rejectWithValue({ error: error.message });\r\n        }\r\n    })\r\n\r\nexport const dislikePostById = createAsyncThunk(\r\n    'post/dislike',\r\n    async (like, thunkAPI) => {\r\n        try {\r\n            await axios.post(ServerInstanceAddress+\"/post/dislike\", like)\r\n        } catch (error) {\r\n            return thunkAPI.rejectWithValue({ error: error.message });\r\n        }\r\n    })\r\n\r\nexport const likeCommentById = createAsyncThunk(\r\n    'post/comment/like',\r\n    async (like, thunkAPI) => {\r\n        try {\r\n            await axios.post(ServerInstanceAddress+\"/post/comment/like\", like)\r\n        } catch (error) {\r\n            return thunkAPI.rejectWithValue({ error: error.message });\r\n        }\r\n    })\r\n\r\nexport const dislikeCommentById = createAsyncThunk(\r\n    'post/comment/dislike',\r\n    async (like, thunkAPI) => {\r\n        try {\r\n            await axios.post(ServerInstanceAddress+\"/post/comment/dislike\", like)\r\n        } catch (error) {\r\n            return thunkAPI.rejectWithValue({ error: error.message });\r\n        }\r\n    })\r\n\r\nexport const postsSlice = createSlice({\r\n    name: 'posts',\r\n    initialState,\r\n    reducers: {\r\n        setLikePostById: {\r\n            reducer(state, action){\r\n                const idPost = action.payload.idPost\r\n                const username = action.payload.username\r\n                const index = state.posts.findIndex(p => {\r\n                    return p._id === idPost\r\n                })\r\n                if(index !== -1){\r\n                    if(state.posts[index].likes.includes(username)){\r\n                        state.posts[index].likes.splice(state.posts[index].likes.indexOf(username), 1)\r\n                    }\r\n                    else{\r\n                        state.posts[index].likes.push(username)\r\n                    }\r\n                }\r\n            },\r\n            prepare(idPost, username){\r\n                return{\r\n                    payload:{\r\n                        idPost: idPost,\r\n                        username: username\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        setLikeCommentById: {\r\n            reducer(state, action){\r\n                const indexPost = state.posts.findIndex(p => {\r\n                    return p._id === action.payload.idPost\r\n                })\r\n                if(indexPost !== -1){\r\n                    const indexComment = state.posts[indexPost].comments.findIndex(c => {\r\n                        return c._id === action.payload.idComment\r\n                    })\r\n                    if(indexComment !== -1){\r\n                        if(state.posts[indexPost].comments[indexComment].likes.includes(action.payload.username)){\r\n                            state.posts[indexPost].comments[indexComment].likes.splice(state.posts[indexPost].comments[indexComment].likes.indexOf(action.payload.username), 1)\r\n                        }\r\n                        else{\r\n                            state.posts[indexPost].comments[indexComment].likes.push(action.payload.username)\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            prepare(idPost, idComment, username){\r\n                return{\r\n                    payload:{\r\n                        idPost: idPost,\r\n                        idComment: idComment,\r\n                        username: username\r\n                    }\r\n                }\r\n            }\r\n        },\r\n    },\r\n    extraReducers: {\r\n        // GET POSTS\r\n        [getPosts.fulfilled]: (state, action) => {\r\n            state.posts = action.payload\r\n        },\r\n        // UPLOAD POST\r\n        [uploadPost.fulfilled]: (state, action) => {\r\n            console.log('Post upload successfully !')\r\n        },\r\n        // ADD COMMENT TO POST BY ID\r\n        [addCommentToPostById.fulfilled]: (state, action) => {\r\n            console.log('Comment upload successfully !')\r\n        },\r\n        // LIKE-POST BY ID\r\n        [likePostById.fulfilled]: (state, action) => {\r\n\r\n        },\r\n        [likePostById.pending]: (state, action) => {\r\n\r\n        },\r\n        // DISLIKE-POST BY ID\r\n        [dislikePostById.fulfilled]: (state, action) => {\r\n\r\n        },\r\n        [dislikePostById.pending]: (state, action) => {\r\n\r\n        },\r\n        // LIKE-COMMENT BY ID\r\n        [likeCommentById.fulfilled]: (state, action) => {\r\n\r\n        },\r\n        // DISLIKE-COMMENT BY ID\r\n        [dislikeCommentById.fulfilled]: (state, action) => {\r\n\r\n        },\r\n    }\r\n});\r\n\r\nexport const {setLikeCommentById, setLikePostById} = postsSlice.actions;\r\n\r\nexport const selectPosts = (state) => state.posts.posts\r\n\r\nexport default postsSlice.reducer;","import React, {useEffect, useState} from \"react\"\r\nimport './Upload.css'\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport MoodIcon from '@material-ui/icons/Mood';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {selectUser} from \"../../../../login/loginSlice\";\r\nimport {getImage, ServerInstanceAddress} from \"../../../../../ServerInstance\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport axios from \"axios\";\r\nimport {uploadPost} from \"../postsSlice\";\r\n\r\nexport const Upload = () => {\r\n\r\n    const [caption, setCaption] = useState('')\r\n    const [video, setVideo] = useState(undefined)\r\n    const [media, setMedia] = useState(undefined)\r\n    const [mood, setMood] = useState(undefined)\r\n\r\n    const user = useSelector(selectUser)\r\n    const [img, setImg] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleUpload = (e) => {\r\n        e.preventDefault()\r\n        if(caption){\r\n            let newPost = {\r\n                idUser: user._id,\r\n                username: user.username,\r\n                imgUserName: user.imgUserName,\r\n                caption: caption,\r\n                timestamp: Date.now(),\r\n                likes: [],\r\n                comments: [],\r\n                mood: ''\r\n            }\r\n            if(media){\r\n                const formData = new FormData()\r\n                formData.append('file', media)\r\n                axios.post(ServerInstanceAddress+'/media/upload', formData).then(res => {\r\n                    newPost['imgPost'] = res.data\r\n                    dispatch(uploadPost(newPost))\r\n                })\r\n            }\r\n            setCaption('')\r\n            setMedia(undefined)\r\n            setVideo(undefined)\r\n            setMood(undefined)\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        setImg(getImage(user.imgUserName))\r\n    },[])\r\n\r\n    return (\r\n        <form className={'feed__upload'}>\r\n            <FormControl style={{width: '98%'}}>\r\n                <div className={'feed__upload__caption'}>\r\n                    <Avatar className={'feed__upload__caption__avatar'} alt=\"H\" src={img} />\r\n                    <input type={'text'}\r\n                           placeholder={'Caption'}\r\n                           className={'feed__upload__caption__input'}\r\n                           value={caption}\r\n                           onChange={(e) => setCaption(e.target.value)}\r\n                    />\r\n                </div>\r\n                <div className={'feed__upload__multi'}>\r\n                    <label className={'feed__upload__multi__label feed__upload__multi__image'} htmlFor={'media'}>\r\n                        <ImageIcon className={'feed__upload__multi__label__icon'} color={'error'} />\r\n                        Image / Video\r\n                        <input id={'media'} style={{display: 'none'}} type={'file'}\r\n                               onChange={e => {\r\n                                   if(e.target.files[0]){\r\n                                       setMedia(e.target.files[0])\r\n                                   }\r\n                               }}/>\r\n                    </label>\r\n                    <label className={'feed__upload__multi__label feed__upload__multi__mood'} htmlFor={'mood'}>\r\n                        <MoodIcon className={'feed__upload__multi__label__icon'} color={'error'} />\r\n                        Mood\r\n                    </label>\r\n                </div>\r\n                <button type={'submit'} className={'feed__upload__btn'} style={{display: 'none'}}\r\n                        onClick={handleUpload}\r\n                >\r\n                    Upload\r\n                </button>\r\n            </FormControl>\r\n        </form>\r\n    )\r\n}","import React, {useEffect, useState} from \"react\"\r\nimport './Comment.css'\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport ThumbUpAltIcon from \"@material-ui/icons/ThumbUpAlt\";\r\nimport {dislikeCommentById, likeCommentById, setLikeCommentById} from \"../postsSlice\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {calculateDifferenceTimestamps} from '../../../../calcul/calcul'\r\nimport {getImage} from \"../../../../../ServerInstance\";\r\nimport {selectUser} from \"../../../../login/loginSlice\";\r\n\r\nexport const Comment = ({idPost, idComment, imgUserName, username, timestamp, text, likes}) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const user = useSelector(selectUser)\r\n    const [timer, setTimer] = useState(0)\r\n    const [flag, setFlag] = useState(0)\r\n\r\n    useEffect(()=>{\r\n        if(likes.includes(user.username)){\r\n            document.getElementById(`comment_likes_${idPost}_${idComment}`).style.color = 'blue'\r\n        }\r\n        else{\r\n            document.getElementById(`comment_likes_${idPost}_${idComment}`).style.color = 'gray'\r\n        }\r\n    }, [])\r\n\r\n    const handleLikeComment = () => {\r\n        clearTimeout(timer)\r\n        console.log(idComment)\r\n        if(!likes.includes(user.username)){\r\n            document.getElementById(`comment_likes_${idPost}_${idComment}`).style.color = 'blue'\r\n            if(flag === 1){\r\n                setFlag(0)\r\n            }else{\r\n                setFlag(1)\r\n                setTimer(setTimeout(()=>{\r\n                    dispatch(likeCommentById({idPost: idPost, idComment: idComment, username: user.username}))\r\n                    setFlag(0)\r\n                }, 3000))\r\n            }\r\n        }else{\r\n            document.getElementById(`comment_likes_${idPost}_${idComment}`).style.color = 'gray'\r\n            if(flag === 1){\r\n                setFlag(0)\r\n            }else{\r\n                setFlag(1)\r\n                setTimer(setTimeout(()=>{\r\n                    dispatch(dislikeCommentById({idPost: idPost, idComment: idComment, username: user.username}))\r\n                    setFlag(0)\r\n                }, 3000))\r\n            }\r\n        }\r\n        dispatch(setLikeCommentById(idPost, idComment, user.username))\r\n    }\r\n\r\n    return(\r\n        <div className={'comment'} id={idComment}>\r\n            <Avatar className={'comment__avatar'} alt={user.username[0].toUpperCase()} src={getImage(user.imgUserName)} />\r\n            <div className={'comment__userAndTextAndStates'}>\r\n                <strong className={'comment__userAndTextAndStates__user'}>{username}</strong>\r\n                <p className={'comment__userAndTextAndStates__text'}>{text}</p>\r\n                <div className={'comment__userAndTextAndStates__states'}>\r\n                    <div className={'comment__userAndTextAndStates__states__likes'}\r\n                         onClick={handleLikeComment}\r\n                    >\r\n                        <ThumbUpAltIcon className={'comment__userAndTextAndStates__states__likes__icon'}\r\n                                        fontSize={'small'}\r\n                                        id={`comment_likes_${idPost}_${idComment}`}\r\n                        />\r\n                        {likes.length}\r\n                    </div>\r\n                    <div className={'comment__userAndTextAndStates__states__timestamp'}>\r\n                        {calculateDifferenceTimestamps(timestamp, Date.now())}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useState} from \"react\"\r\nimport './UploadComment.css'\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n// import {addCommentToPostById} from \"../postsSlice\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport {selectUser} from \"../../../../login/loginSlice\";\r\nimport {getImage} from \"../../../../../ServerInstance\";\r\nimport {addCommentToPostById} from \"../postsSlice\";\r\n\r\nexport const UploadComment = ({idPost}) => {\r\n\r\n    // const user = {username: 'HamzaHamdoud', imgUserURL: 'hamza.jpg'}\r\n    const user = useSelector(selectUser)\r\n    const [comment, setComment] = useState('')\r\n    const dispatch = useDispatch()\r\n\r\n    const handleUploadComment = (e) => {\r\n        e.preventDefault()\r\n        const newComment = {\r\n            idPost: idPost,\r\n            comment:{\r\n                username: user.username,\r\n                imgUserName: user.imgUserName,\r\n                text: comment,\r\n                timestamp: Date.now(),\r\n                likes: []\r\n            }\r\n\r\n        }\r\n        dispatch(addCommentToPostById(newComment))\r\n        setComment('')\r\n    }\r\n\r\n    return (\r\n        <form className={'feed__posts__post__uploadComment'}>\r\n            <FormControl className={'feed__posts__post__uploadComment__formControl'}>\r\n                <Avatar className={'feed__posts__post__uploadComment__avatar'} alt={user.username[0].toUpperCase()} src={getImage(user.imgUserName)} />\r\n                <Input className={'feed__posts__post__uploadComment__input'} placeholder=\"Comment\"\r\n                       value={comment}\r\n                       onChange={e => setComment(e.target.value)}\r\n                />\r\n                <button className={'feed__posts__post__uploadComment__btn'} style={{display: 'none'}}\r\n                        onClick={handleUploadComment}\r\n                />\r\n            </FormControl>\r\n\r\n        </form>\r\n    )\r\n}","import React, {useEffect, useState} from \"react\"\r\nimport './Post.css'\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\r\nimport CommentIcon from '@material-ui/icons/Comment';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {dislikePostById, likePostById, setLikePostById} from \"../postsSlice\";\r\nimport {Comment} from \"../comment/Comment\";\r\nimport {calculateDifferenceTimestamps} from '../../../../calcul/calcul'\r\nimport {UploadComment} from \"../uploadComment/UploadComment\";\r\nimport {selectUser} from \"../../../../login/loginSlice\";\r\nimport {getImage} from \"../../../../../ServerInstance\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\"\r\nimport path from \"path\"\r\nimport MoreHorizIcon from '@mui/icons-material/MoreHoriz';\r\n\r\n\r\nexport const Post = ({idPost, imgUser, username, timestamp, caption, imgPost, likes, comments}) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const user = useSelector(selectUser)\r\n    const [timer, setTimer] = useState(0)\r\n    const [flag, setFlag] = useState(0)\r\n    const [displayComments, setDisplayComments] = useState(true)\r\n\r\n    useEffect(()=>{\r\n        if(likes.includes(user.username)){\r\n            document.getElementById(`post_likes_${idPost}`).style.color = 'blue'\r\n        }\r\n        else{\r\n            document.getElementById(`post_likes_${idPost}`).style.color = 'gray'\r\n        }\r\n    }, [])\r\n\r\n    const hanldeLikePost = () => {\r\n        clearTimeout(timer)\r\n        if(!likes.includes(user.username)){\r\n            document.getElementById(`post_likes_${idPost}`).style.color = 'blue'\r\n            if(flag === 1)\r\n            {\r\n                setFlag(0)\r\n            }\r\n            else{\r\n                setFlag(1)\r\n                setTimer(setTimeout(()=>{\r\n                    dispatch(likePostById({idPost, username: user.username}))\r\n                    setFlag(0)\r\n                },3000))\r\n            }\r\n        }\r\n        else{\r\n            document.getElementById(`post_likes_${idPost}`).style.color = 'gray'\r\n            if(flag === 1){\r\n                setFlag(0)\r\n            }\r\n            else{\r\n                setFlag(1)\r\n                setTimer(setTimeout(()=>{\r\n                    dispatch(dislikePostById({idPost, username: user.username}))\r\n                    setFlag(0)\r\n                },3000))\r\n            }\r\n        }\r\n        dispatch(setLikePostById(idPost, user.username))\r\n    }\r\n\r\n    const displayCommentsPost = (e) => {\r\n\r\n        if(displayComments){\r\n            setDisplayComments(false)\r\n        }else{\r\n            setDisplayComments(true)\r\n        }\r\n\r\n        // const commentsElement = e.target.parentNode.parentNode.parentNode.parentNode.querySelector('.feed__posts__post__comments')\r\n        // if(window.getComputedStyle(commentsElement).getPropertyValue('display') === 'flex'){\r\n        //     commentsElement.style.display = 'none'\r\n        //     e.target.querySelector('.feed__posts__post__states__comments__icon').style.color = 'gray'\r\n        // }\r\n        // else{\r\n        //     commentsElement.style.display = 'flex'\r\n        //     e.target.querySelector('.feed__posts__post__states__comments__icon').style.color = 'red'\r\n        // }\r\n    }\r\n\r\n    return (\r\n        <div className={'feed__posts__post'} id={'feed__posts__post__' + idPost}>\r\n            <div className={'feed__posts__post__head'}>\r\n                <Avatar className={'feed__posts__post__head__avatar'} alt={username[0]} src={getImage(imgUser)} />\r\n                <div className={'feed__posts__post__head__user'}>\r\n                    <strong className={'feed__posts__post__head__user__username'}>{username}</strong>\r\n                    <span className={'feed__posts__post__head__user__timestamp'}>\r\n                        {calculateDifferenceTimestamps(timestamp, Date.now())}\r\n                    </span>\r\n                </div>\r\n            </div>\r\n            <div className={'feed__posts__post__caption'}>\r\n                {caption}\r\n            </div>\r\n            {\r\n                imgPost !== null ?\r\n                    ['.jpg', '.jpeg', '.png'].includes(path.extname(imgPost)) ?\r\n                        <img src={getImage(imgPost)} alt={''} className={'feed__posts__post__media'} />\r\n                        :\r\n                        <video controls className={'feed__posts__post__media'}>\r\n                            <source src={getImage(imgPost)}/>\r\n                        </video>\r\n                        // <video src={getImage(imgPost)} className={'feed__posts__post__media'} />\r\n                    :\r\n                    ''\r\n            }\r\n            <div className={'feed__posts__post__states'}>\r\n                <IconButton className={'feed__posts__post__states__likes'}\r\n                     onClick={hanldeLikePost}\r\n                >\r\n                    <ThumbUpAltIcon className={'feed__posts__post__states__likes__icon'}\r\n                                    id={`post_likes_${idPost}`}\r\n                    />{likes.length}\r\n                </IconButton>\r\n                <IconButton className={'feed__posts__post__states__comments'}\r\n                     onClick={displayCommentsPost}\r\n                >\r\n                    <CommentIcon className={'feed__posts__post__states__comments__icon'}\r\n                                 style={{color: 'red'}}\r\n                    />\r\n                    <span>{comments.length}</span>\r\n                </IconButton>\r\n            </div>\r\n            <UploadComment idPost={idPost} />\r\n            {\r\n                comments.length !== 0 ?\r\n                    displayComments ?\r\n                        <div className={'feed__posts__post__comments'}>\r\n                            {comments.map((comment)=>(\r\n                                <Comment key={comment._id}\r\n                                         idPost={idPost}\r\n                                         idComment={comment._id}\r\n                                         imgUserName={comment.imgUserName}\r\n                                         username={comment.username}\r\n                                         timestamp={comment.timestamp}\r\n                                         text={comment.text}\r\n                                         likes={comment.likes}\r\n                                />\r\n                            ))}\r\n                        </div>\r\n                        :\r\n                        <Button className={'feed__posts__post__moreComments'} variant=\"contained\" color=\"primary\"\r\n                                onClick={()=>setDisplayComments(true)}\r\n                        >\r\n                            <MoreHorizIcon fontSize={'medium'}></MoreHorizIcon>\r\n                        </Button>\r\n\r\n                    :\r\n                    ''\r\n            }\r\n        </div>\r\n    )\r\n}","import React, {useEffect} from \"react\"\r\nimport './Posts.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getPosts, selectPosts} from \"./postsSlice\";\r\nimport {Post} from \"./post/Post\";\r\nimport {pusher} from \"../../../../ServerInstance\";\r\nimport {selectUser} from \"../../../login/loginSlice\";\r\n\r\nexport const Posts = () => {\r\n\r\n    const posts = useSelector(selectPosts)\r\n    const user = useSelector(selectUser)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(()=>{\r\n        const channel = pusher.subscribe('posts');\r\n        channel.bind('inserted', function(data) {\r\n            dispatch(getPosts({idUser: user._id, friends: user.idFriends}))\r\n        })\r\n        channel.bind('updated', function(data) {\r\n            dispatch(getPosts({idUser: user._id, friends: user.idFriends}))\r\n        })\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        dispatch(getPosts({idUser: user._id, friends: user.idFriends}))\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className={'feed__posts'}>\r\n            {posts && posts.length !== 0 ?\r\n                posts.map( post =>(\r\n                    <Post idPost={post._id}\r\n                          key={post._id}\r\n                          imgUser={post.imgUserName}\r\n                          username={post.username}\r\n                          timestamp={post.timestamp}\r\n                          caption={post.caption}\r\n                          imgPost={post.imgPost}\r\n                          comments={post.comments}\r\n                          likes={post.likes}\r\n                          videoPost={post.videoPost}\r\n                          mood={post.mood}\r\n                    />\r\n                ))\r\n                :\r\n                ''\r\n            }\r\n        </div>\r\n    )\r\n}","import React from \"react\"\r\nimport {Upload} from './posts/upload/Upload'\r\nimport {Posts} from \"./posts/Posts\"\r\nimport './Feed.css'\r\n\r\nexport const Feed = () => {\r\n    return(\r\n        <div className={'feed'}>\r\n            <Upload />\r\n            <Posts />\r\n        </div>\r\n    )\r\n}","import React, {useEffect, useState} from \"react\"\r\nimport './Sidebar.css'\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport LocalHospitalIcon from '@material-ui/icons/LocalHospital';\r\nimport EmojiFlagsIcon from '@material-ui/icons/EmojiFlags';\r\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport StorefrontIcon from '@material-ui/icons/Storefront';\r\nimport YouTubeIcon from '@material-ui/icons/YouTube';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport {useSelector} from \"react-redux\";\r\nimport {selectUser} from \"../../login/loginSlice\";\r\nimport {getImage} from \"../../../ServerInstance\";\r\n\r\nexport const Sidebar = () => {\r\n\r\n    const user = useSelector(selectUser)\r\n    const [img, setImg] = useState('')\r\n    useEffect(()=>{\r\n        setImg(getImage(user.imgUserName))\r\n    }, [])\r\n\r\n    return (\r\n        <div className={'sidebar'}>\r\n            <div className={'sidebar__user'}>\r\n                <Avatar className={'sidebar__user__avatar'} alt=\"H\" src={img} />\r\n                <strong className={'sidebar__user__text'}>{user.firstName} {user.name}</strong>\r\n            </div>\r\n            <div className={'sidebar__point sidebar__covid'}>\r\n                <LocalHospitalIcon className={'sidebar__point__icon'} style={{color:'#3F51B5'}} />\r\n                <strong className={'sidebar__user__text'}>COVID-19 Information Center</strong>\r\n            </div>\r\n            <div className={'sidebar__point sidebar__pages'}>\r\n                <EmojiFlagsIcon className={'sidebar__point__icon'} style={{color:'#3F51B5'}} />\r\n                <strong className={'sidebar__user__text'}>Pages</strong>\r\n            </div>\r\n            <div className={'sidebar__point sidebar__friends'}>\r\n                <PeopleAltIcon className={'sidebar__point__icon'} style={{color:'#3F51B5'}} />\r\n                <strong className={'sidebar__user__text'}>Friends</strong>\r\n            </div>\r\n            <div className={'sidebar__point sidebar__messengers'}>\r\n                <ChatIcon className={'sidebar__point__icon'} style={{color:'#3F51B5'}} />\r\n                <strong className={'sidebar__user__text'}>Messengers</strong>\r\n            </div>\r\n            <div className={'sidebar__point sidebar__marketplace'}>\r\n                <StorefrontIcon className={'sidebar__point__icon'} style={{color:'#3F51B5'}} />\r\n                <strong className={'sidebar__user__text'}>Marketplace</strong>\r\n            </div>\r\n            <div className={'sidebar__point sidebar__videos'}>\r\n                <YouTubeIcon className={'sidebar__point__icon'} style={{color:'#3F51B5'}} />\r\n                <strong className={'sidebar__user__text'}>Videos</strong>\r\n            </div>\r\n            <div className={'sidebar__point sidebar__more'}>\r\n                <ExpandMoreIcon className={'sidebar__point__icon'} style={{color:'#3F51B5'}} />\r\n                <strong className={'sidebar__user__text'}>More</strong>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {createAsyncThunk, createSlice} from '@reduxjs/toolkit'\r\nimport {ServerInstanceAddress} from \"../../../ServerInstance\";\r\nimport axios from \"axios\";\r\n\r\nconst initialState = {\r\n    discussions: [],\r\n    statusUpDateDiscussions: false\r\n}\r\n\r\nexport const getDiscussion = createAsyncThunk(\r\n    'messages/getDiscussion',\r\n    async (idUsers, thunkAPI) => {\r\n        try {\r\n            const response = await axios.post(ServerInstanceAddress+\"/messages/getDiscussion\", {idUser1: idUsers.idUser1, idUser2: idUsers.idUser2}).then(res => {\r\n                return res.data\r\n            })\r\n\r\n            return response\r\n        } catch (error) {\r\n            return thunkAPI.rejectWithValue({ error: error.message });\r\n        }\r\n    })\r\n\r\nexport const addMessage = createAsyncThunk(\r\n    'messages/addMessage',\r\n    async (newMessage, thunkAPI) => {\r\n        try {\r\n            const response = await axios.post(ServerInstanceAddress+\"/messages/addMessage\", newMessage).then(res => {\r\n                return res.data\r\n            })\r\n\r\n            return response\r\n        } catch (error) {\r\n            return thunkAPI.rejectWithValue({ error: error.message });\r\n        }\r\n    })\r\nexport const synchMessages = createAsyncThunk(\r\n    'messages/synchMessages',\r\n    async (messages, thunkAPI) => {\r\n        try {\r\n            const response = await axios.post(ServerInstanceAddress+\"/messages/synchMessages\", messages).then(res => {\r\n                return res.data\r\n            })\r\n\r\n            return response\r\n        } catch (error) {\r\n            return thunkAPI.rejectWithValue({ error: error.message });\r\n        }\r\n    })\r\n\r\n\r\nexport const messagesSlice = createSlice({\r\n    name: 'messages',\r\n    initialState,\r\n    reducers: {\r\n        cleanDiscussion : (state, action) => {\r\n            if(state.discussions.length === 1){\r\n                state.discussions = []\r\n            }else{\r\n                state.discussions.splice(action.payload, 1)\r\n            }\r\n        },\r\n        resetStatusUpDateDiscussions : (state, action) => {\r\n           state.statusUpDateDiscussions = false\r\n        }\r\n    },\r\n    extraReducers: {\r\n        [getDiscussion.fulfilled]: (state, action) => {\r\n            if(action.payload !== null){\r\n                const check = state.discussions.findIndex(d => d.messages._id === action.payload.messages._id)\r\n                if(check === -1){\r\n                    state.discussions.push(action.payload)\r\n                    state.statusUpDateDiscussions = true\r\n                }\r\n            }\r\n        },\r\n        [synchMessages.fulfilled]: (state, action) => {\r\n            const index = state.discussions.findIndex(d => d.messages._id === action.payload._id)\r\n            if(index !== -1){\r\n                state.discussions[index].messages = action.payload\r\n            }\r\n            state.statusUpDateDiscussions = true\r\n        }\r\n    }\r\n})\r\n\r\nexport const {cleanDiscussion, resetStatusUpDateDiscussions} = messagesSlice.actions\r\n\r\nexport const selectDiscussions = state => state.messages.discussions\r\nexport const selectStatusUpDateDiscussions = state => state.messages.statusUpDateDiscussions\r\n\r\n\r\nexport default messagesSlice.reducer","import React, {useEffect} from \"react\"\r\nimport './FriendsBox.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {selectFriends} from \"./friendsBoxSlice.js\";\r\nimport {selectUser} from \"../../login/loginSlice\";\r\nimport {getFriends} from \"./friendsBoxSlice\";\r\nimport {getImage} from \"../../../ServerInstance\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport {getDiscussion} from \"../messages/messagesSlice\";\r\n\r\nexport const FriendsBox = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const friends = useSelector(selectFriends)\r\n    const user = useSelector(selectUser)\r\n\r\n    useEffect(() => {\r\n        if (user !== null) {\r\n            dispatch(getFriends({myIdUser: user._id}))\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div className={'friendsBox'}>\r\n            <p className={'friendsBox__title'}>\r\n                Contacts\r\n            </p>\r\n            {\r\n                friends.length !== 0 ?\r\n                    friends.map(friend => (\r\n                        <div key={'friend-'+friend._id} className={'friendsBox__friend'}\r\n                             onClick={() => {\r\n                                 // console.log('getDiscussion !')\r\n                                 dispatch(getDiscussion(\r\n                                     {\r\n                                         idUser1: user._id,\r\n                                         idUser2: friend._id\r\n                                     }))\r\n                             }}\r\n                        >\r\n                            <Avatar src={getImage(friend.imgUserName)} alt={friend.username[0].toUpperCase()}\r\n                                    className={'friendsBox__friend__avatar'}\r\n                            />\r\n                            <span className={'friendsBox__friend__text'}>{friend.name} {friend.firstName}</span>\r\n                        </div>\r\n                    ))\r\n                    :\r\n                    <div className={'friendsBox__noFriends'}>\r\n                        No friends yet\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}","import React, {useState} from \"react\"\r\nimport './Discussion.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {selectUser} from \"../../../login/loginSlice\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport {getImage} from \"../../../../ServerInstance\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport {addMessage, cleanDiscussion} from \"../messagesSlice\";\r\nimport HighlightOffRoundedIcon from \"@mui/icons-material/HighlightOffRounded\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport SendIcon from \"@mui/icons-material/Send\";\r\n\r\nexport const Discussion = ({friend, messages, index}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const user = useSelector(selectUser)\r\n    const [message, setMessage] = useState('')\r\n    const [reduced, setReduced] = useState(false)\r\n\r\n    return(\r\n\r\n        <div key={'discussion-'+friend.id+'-'+user._id} className={'messages__discussion'}>\r\n            <div className={'messages__discussion__information'} onClick={()=>{\r\n                console.log('click ')\r\n                if(reduced){\r\n                    setReduced(false)\r\n                }else{\r\n                    setReduced(true)\r\n                }\r\n            }}>\r\n                <Avatar src={getImage(friend.imgUserName)} alt={friend.name[0].toUpperCase()}\r\n                        className={'messages__discussion__information__avatar'}\r\n                />\r\n                {friend.firstName} {friend.name}\r\n                <IconButton className={'messages__discussion__information__exit'}\r\n                            color=\"success\"\r\n                            onClick={()=>{\r\n                                dispatch(cleanDiscussion(index))\r\n                            }}\r\n                >\r\n                    <HighlightOffRoundedIcon></HighlightOffRoundedIcon>\r\n                </IconButton>\r\n            </div>\r\n            {\r\n                !reduced ?\r\n                    <div className={'messages__discussion__main'}>\r\n                        {\r\n                            messages !== null && messages.length !== 0 ?\r\n                                messages.messages.map(msg => (\r\n                                    msg.idUser === user._id ?\r\n                                        <div key={'msg-' + msg._id}\r\n                                             className={'messages__discussion__main__msg messages__discussion__main__myMsg'}>\r\n                                            {msg.message}\r\n                                        </div>\r\n                                        :\r\n                                        <div key={'msg-' + msg._id}\r\n                                             className={'messages__discussion__main__msg messages__discussion__main__friendMsg'}>\r\n                                            {msg.message}\r\n                                        </div>\r\n                                ))\r\n                                :\r\n                                ''\r\n                        }\r\n                    </div>\r\n                    :\r\n                    ''\r\n            }\r\n            {\r\n                !reduced ?\r\n                    <form className={'messages__discussion__form'}>\r\n                        <FormControl className={'messages__discussion__form__control'}>\r\n                            <input className={'messages__discussion__form__control__input'} placeholder=\"Message\"\r\n                                   value={message}\r\n                                   onChange={e => setMessage(e.target.value)}\r\n                                   type={'text'}\r\n                                   autoFocus\r\n                            />\r\n                            <IconButton type={'submit'}\r\n                                        onClick={(e)=>{\r\n                                            e.preventDefault()\r\n                                            const newMessage = {\r\n                                                idMessages : messages._id,\r\n                                                message : {\r\n                                                    message: message,\r\n                                                    timestamp: Date.now(),\r\n                                                    idUser: user._id,\r\n                                                    likes: []\r\n                                                }\r\n                                            }\r\n                                            dispatch(addMessage(newMessage))\r\n                                            setMessage('')\r\n                                        }}\r\n                                        color={'primary'}\r\n                                        disabled={!message}\r\n                                        className={'messages__discussion__form__control__btn'}>\r\n                                <SendIcon></SendIcon>\r\n                            </IconButton>\r\n                        </FormControl>\r\n                    </form>\r\n                    :\r\n                    ''\r\n            }\r\n\r\n        </div>\r\n\r\n        )\r\n}","import React, {useEffect, useState} from \"react\"\r\nimport './Messages.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    resetStatusUpDateDiscussions,\r\n    selectDiscussions,\r\n    selectStatusUpDateDiscussions,\r\n    synchMessages\r\n} from \"./messagesSlice\";\r\nimport {selectUser} from \"../../login/loginSlice\";\r\nimport {pusher} from \"../../../ServerInstance\";\r\nimport {Discussion} from \"./discussion/Discussion\";\r\n\r\nexport const Messages = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const discussions = useSelector(selectDiscussions)\r\n    const statusUpDateDiscussions = useSelector(selectStatusUpDateDiscussions)\r\n\r\n    const [statusSynchServer, setStatusSynchServer] = useState(false)\r\n\r\n    const user = useSelector(selectUser)\r\n\r\n    useEffect(()=>{\r\n        const channel = pusher.subscribe('messages');\r\n        channel.bind('inserted', function(data) {\r\n            console.log('Inserted messages')\r\n            setStatusSynchServer(true)\r\n        })\r\n        channel.bind('updated', function(data) {\r\n            console.log('Update messages')\r\n            setStatusSynchServer(true)\r\n        })\r\n    }, [])\r\n\r\n    useEffect(()=>{\r\n        console.log(discussions)\r\n        discussions.forEach((d,i) => {\r\n            const idUsers = {\r\n                idUser1 : user._id,\r\n                idUser2 : d.friend.id\r\n            }\r\n            dispatch(synchMessages(idUsers))\r\n        })\r\n        setStatusSynchServer(false)\r\n    }, [statusSynchServer])\r\n\r\n    useEffect(()=>{\r\n        const mainElements = document.querySelectorAll('.messages__discussion__main')\r\n        if(mainElements !== null){\r\n            mainElements.forEach(mainElem => {\r\n                mainElem.scrollTop = mainElem.scrollHeight\r\n            })\r\n        }\r\n        dispatch(resetStatusUpDateDiscussions())\r\n    }, [statusUpDateDiscussions])\r\n\r\n    return(\r\n        <div className={'messages'}>\r\n            {\r\n                discussions.length !== 0 ?\r\n                    discussions.map((d, i) => (\r\n                        <Discussion friend={d.friend} messages={d.messages} index={i} />\r\n                    ))\r\n                    :\r\n                    ''\r\n            }\r\n        </div>\r\n    )\r\n}","import React, {useEffect} from 'react'\r\nimport './Home.css'\r\nimport {Header} from \"./header/Header.js\";\r\nimport {Feed} from \"./feed/Feed.js\";\r\nimport {Sidebar} from \"./sidebar/Sidebar.js\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {selectUser} from \"../login/loginSlice\";\r\nimport {useHistory} from \"react-router-dom\"\r\nimport {FriendsBox} from \"./friendsBox/FriendsBox\";\r\nimport {Messages} from \"./messages/Messages\";\r\n\r\nexport const Home = () => {\r\n\r\n    const user = useSelector(selectUser)\r\n    const history = useHistory()\r\n\r\n    useEffect(()=>{\r\n        if(user === null || user.length === 0){\r\n            history.push('/login')\r\n        }\r\n    },[])\r\n\r\n    return(\r\n        user\r\n            ?\r\n                <div className={'home'}>\r\n                    <Sidebar />\r\n                    <Feed />\r\n                </div>\r\n            :\r\n                ''\r\n\r\n    )\r\n}","import React from 'react';\r\nimport {Redirect, Route, Switch, BrowserRouter as Router} from \"react-router-dom\";\r\nimport {Login} from \"./features/login/Login\";\r\nimport {SignUp} from \"./features/login/SignUp/SignUp\";\r\nimport {Home} from \"./features/home/Home\";\r\nimport {Header} from \"./features/home/header/Header\";\r\nimport {FriendsBox} from \"./features/home/friendsBox/FriendsBox\";\r\nimport {Messages} from \"./features/home/messages/Messages\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n        <div className={'app'}>\r\n            <Switch>\r\n                <Route exact path={'/login'} component={Login}/>\r\n                <Route exact path={'/signUp'} component={SignUp} />\r\n                {/*<Route exact path={'/home'} component={Home} />*/}\r\n                <Route exact\r\n                       path={'/home'}\r\n                       render={()=>(\r\n                           <React.Fragment>\r\n                               <Header />\r\n                               <FriendsBox />\r\n                               <Home />\r\n                               <Messages />\r\n                           </React.Fragment>\r\n                       )}\r\n                />\r\n                <Redirect from={'/*'} to=\"/login\" status={200} />\r\n            </Switch>\r\n        </div>\r\n        {/*<div className={'app'}>*/}\r\n            {/*<Switch>*/}\r\n            {/*    <Route exact*/}\r\n            {/*           path={'/home'}*/}\r\n            {/*           render={()=>(*/}\r\n            {/*               <React.Fragment>*/}\r\n            {/*                   <Feed />*/}\r\n            {/*                   <Sidebar />*/}\r\n            {/*               </React.Fragment>*/}\r\n            {/*           )}*/}\r\n            {/*    />*/}\r\n            {/*    <Redirect to=\"/home\" />*/}\r\n            {/*</Switch>*/}\r\n        {/*</div>*/}\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport postsReducer from '../features/home/feed/posts/postsSlice';\r\nimport loginReducer from '../features/login/loginSlice'\r\nimport headerReducer from '../features/home/header/headerSlice'\r\nimport friendsBoxReducer from '../features/home/friendsBox/friendsBoxSlice'\r\nimport messagesReducer from \"../features/home/messages/messagesSlice\"\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    posts: postsReducer,\r\n    login: loginReducer,\r\n    header: headerReducer,\r\n    friendsBox: friendsBoxReducer,\r\n    messages: messagesReducer\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { store } from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"," const calculateDifferenceTimestamps = (t1, t2) => {\r\n    let diff = t2 - t1\r\n    const second = 1000\r\n    const min = 60\r\n    const hour = 60\r\n    const day = 24\r\n    const month = 30\r\n    const year = 12\r\n    diff = diff / second\r\n    if(diff <= 60){\r\n        return 'Since ' + Math.round(diff) + ' seconds'\r\n    }\r\n    diff = diff / min\r\n    if(diff <= 60){\r\n        return 'Since ' + Math.round(diff) + ' minutes'\r\n    }\r\n    diff = diff / hour\r\n    if(diff <= 24){\r\n        return 'Since ' + Math.round(diff) + ' hours'\r\n    }\r\n    diff = diff / day;\r\n    if(diff <= 30){\r\n        return 'Since ' + Math.round(diff) + ' days'\r\n    }\r\n    diff = diff / month\r\n    if(diff <= 12){\r\n        return 'Since ' + Math.round(diff) + ' months'\r\n    }\r\n    diff = diff / year\r\n    return 'Since ' + Math.round(diff) + ' years'\r\n}\r\n\r\nconst generateUniqueId = () => {\r\n    let s4 = () => {\r\n        return Math.floor((1 + Math.random()) * 0x10000)\r\n            .toString(16)\r\n            .substring(1);\r\n    }\r\n    //return id of format 'aaaaaaaa'-'aaaa'-'aaaa'-'aaaa'-'aaaaaaaaaaaa'\r\n    return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\r\n}\r\n\r\nmodule.exports = {calculateDifferenceTimestamps, generateUniqueId}"],"sourceRoot":""}